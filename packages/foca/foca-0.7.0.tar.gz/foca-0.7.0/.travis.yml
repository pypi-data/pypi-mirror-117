os:
  - linux
dist: bionic
language: python
python:
  - "3.6"
  - "3.7"
  - "3.8"
  - "3.9"

env:
  - TRAVIS: true

services:
- docker

# build for all pushes, as well as PRs coming from forks
# this ensures that the pipeline is triggered for internal pushes,
# PRs from forks and pushes to existing PRs from forks
if: (type == push) OR (type == pull_request AND fork == true)

script:
  # install dependencies; not using `install` directive as this
  # would apply to the job matrix, too, which is not desired
  - pip install -r requirements.txt
  - pip install -r requirements_dev.txt
  # run tests
  - flake8
  - coverage run --source foca -m pytest
  - coveralls
  - |
    cd "${TRAVIS_BUILD_DIR}/examples/petstore" && \
    docker-compose up --build -d && \
    cd "${TRAVIS_BUILD_DIR}"
  - sleep 10
  - pytest "${TRAVIS_BUILD_DIR}/tests/integration_tests.py"

jobs:
  include:
    - stage: publish
      if: fork == false
      # for security reasons, builds from forks won't be published until merged;
      # also, environment variables defined in repository settings are not
      # available to builds from PRs coming from external repos
      language: shell
      name: Build and publish
      script:
        - |
          if [ "$TRAVIS_BRANCH" = "dev" ]; then
              export DOCKER_TAG="$(date '+%Y%m%d')"
          else
              export DOCKER_TAG=${TRAVIS_BRANCH//_/-}
              export DOCKER_TAG=${DOCKER_TAG//\//-}
          fi
        - |
          docker build . \
            -f "${TRAVIS_BUILD_DIR}/docker/Dockerfile_py3.6" \
            -t "${DOCKER_REPO_NAME}:${DOCKER_TAG}-py3.6" \
            || travis_terminate 1
        - |
          docker build . \
            -f "${TRAVIS_BUILD_DIR}/docker/Dockerfile_py3.7" \
            -t "${DOCKER_REPO_NAME}:${DOCKER_TAG}-py3.7" \
            || travis_terminate 1
        - |
          docker build . \
            -f "${TRAVIS_BUILD_DIR}/docker/Dockerfile_py3.8" \
            -t "${DOCKER_REPO_NAME}:${DOCKER_TAG}-py3.8" \
            || travis_terminate 1
        - |
          docker build . \
            -f "${TRAVIS_BUILD_DIR}/docker/Dockerfile_py3.9" \
            -t "${DOCKER_REPO_NAME}:${DOCKER_TAG}-py3.9" \
            || travis_terminate 1
        - |
          docker build . \
            -f "${TRAVIS_BUILD_DIR}/docker/Dockerfile_py3.9" \
            -t "${DOCKER_REPO_NAME}:latest" \
            || travis_terminate 1
        - |
          echo "${DOCKER_TOKEN}" | \
            docker login -u "${DOCKER_USER}" --password-stdin
        - |
          docker push "${DOCKER_REPO_NAME}:${DOCKER_TAG}-py3.6" \
            || travis_terminate 1
        - |
          docker push "${DOCKER_REPO_NAME}:${DOCKER_TAG}-py3.7" \
            || travis_terminate 1
        - |
          docker push "${DOCKER_REPO_NAME}:${DOCKER_TAG}-py3.8" \
            || travis_terminate 1
        - |
          docker push "${DOCKER_REPO_NAME}:${DOCKER_TAG}-py3.9" \
            || travis_terminate 1
        - if [ "$TRAVIS_BRANCH" = "dev" ]; then docker push "${DOCKER_REPO_NAME}:latest"; fi
        - rm ${HOME}/.docker/config.json  # delete token

after_success:
- git config --global user.name "semantic-release (via TravisCI)"
- git config --global user.email "semantic-release@travis"
- semantic-release publish -v DEBUG
