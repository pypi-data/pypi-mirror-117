# coding: utf-8

"""
    Dockstore API

    This describes the dockstore API, a webservice that manages pairs of Docker images and associated metadata such as CWL documents and Dockerfiles used to build those images. Explore swagger.json for a Swagger 2.0 description of our API and explore openapi.yaml for OpenAPI 3.0 descriptions.  # noqa: E501

    OpenAPI spec version: 1.12.0-alpha.1-SNAPSHOT
    Contact: theglobalalliance@genomicsandhealth.org
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import jgreenepack
from jgreenepack.jgreenepack.api.workflows_api import WorkflowsApi  # noqa: E501
from jgreenepack.rest import ApiException


class TestWorkflowsApi(unittest.TestCase):
    """WorkflowsApi unit test stubs"""

    def setUp(self):
        self.api = jgreenepack.jgreenepack.api.workflows_api.WorkflowsApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_add_test_parameter_files(self):
        """Test case for add_test_parameter_files

        Add test parameter files for a given version.  # noqa: E501
        """
        pass

    def test_add_workflow(self):
        """Test case for add_workflow

        See OpenApi for details  # noqa: E501
        """
        pass

    def test_add_workflow_permission(self):
        """Test case for add_workflow_permission

        Set the specified permission for a user on a workflow.  # noqa: E501
        """
        pass

    def test_all_published_workflows(self):
        """Test case for all_published_workflows

        List all published workflows.  # noqa: E501
        """
        pass

    def test_delete_test_parameter_files(self):
        """Test case for delete_test_parameter_files

        Delete test parameter files for a given version.  # noqa: E501
        """
        pass

    def test_delete_workflow(self):
        """Test case for delete_workflow

        See OpenApi for details  # noqa: E501
        """
        pass

    def test_get_all_workflow_by_path(self):
        """Test case for get_all_workflow_by_path

        Get a list of workflows by path.  # noqa: E501
        """
        pass

    def test_get_entry_by_path(self):
        """Test case for get_entry_by_path

        Get an entry by path.  # noqa: E501
        """
        pass

    def test_get_published_entry_by_path(self):
        """Test case for get_published_entry_by_path

        Get a published entry by path.  # noqa: E501
        """
        pass

    def test_get_published_workflow(self):
        """Test case for get_published_workflow

        Get a published workflow.  # noqa: E501
        """
        pass

    def test_get_published_workflow_by_path(self):
        """Test case for get_published_workflow_by_path

        Get a published workflow by path  # noqa: E501
        """
        pass

    def test_get_published_workflows_by_organization(self):
        """Test case for get_published_workflows_by_organization

        List all published workflows of an organization.  # noqa: E501
        """
        pass

    def test_get_starred_users(self):
        """Test case for get_starred_users

        Returns list of users who starred the given workflow.  # noqa: E501
        """
        pass

    def test_get_table_tool_content(self):
        """Test case for get_table_tool_content

        Get the Tools for a given workflow version.  # noqa: E501
        """
        pass

    def test_get_test_parameter_files(self):
        """Test case for get_test_parameter_files

        Get the corresponding test parameter files.  # noqa: E501
        """
        pass

    def test_get_users(self):
        """Test case for get_users

        Get users of a workflow.  # noqa: E501
        """
        pass

    def test_get_workflow(self):
        """Test case for get_workflow

        Retrieve a workflow  # noqa: E501
        """
        pass

    def test_get_workflow_actions(self):
        """Test case for get_workflow_actions

        Gets all actions a user can perform on a workflow.  # noqa: E501
        """
        pass

    def test_get_workflow_by_alias(self):
        """Test case for get_workflow_by_alias

        Retrieves a workflow by alias.  # noqa: E501
        """
        pass

    def test_get_workflow_by_path(self):
        """Test case for get_workflow_by_path

        Get a workflow by path.  # noqa: E501
        """
        pass

    def test_get_workflow_dag(self):
        """Test case for get_workflow_dag

        Get the DAG for a given workflow version.  # noqa: E501
        """
        pass

    def test_get_workflow_permissions(self):
        """Test case for get_workflow_permissions

        Get all permissions for a workflow.  # noqa: E501
        """
        pass

    def test_get_workflow_versions(self):
        """Test case for get_workflow_versions

        Return first 200 versions in an entry  # noqa: E501
        """
        pass

    def test_get_workflow_zip(self):
        """Test case for get_workflow_zip

        Download a ZIP file of a workflow and all associated files.  # noqa: E501
        """
        pass

    def test_handle_git_hub_branch_deletion(self):
        """Test case for handle_git_hub_branch_deletion

        Handles the deletion of a branch on GitHub. Will delete all workflow versions that match in all workflows that share the same repository.  # noqa: E501
        """
        pass

    def test_handle_git_hub_installation(self):
        """Test case for handle_git_hub_installation

        Handle the installation of our GitHub app onto a repository or organization.  # noqa: E501
        """
        pass

    def test_handle_git_hub_release(self):
        """Test case for handle_git_hub_release

        Handle a release of a repository on GitHub. Will create a workflow/service and version when necessary.  # noqa: E501
        """
        pass

    def test_manual_register(self):
        """Test case for manual_register

        Manually register a workflow.  # noqa: E501
        """
        pass

    def test_primary_descriptor(self):
        """Test case for primary_descriptor

        Get the primary descriptor file.  # noqa: E501
        """
        pass

    def test_publish(self):
        """Test case for publish

        Publish or unpublish a workflow.  # noqa: E501
        """
        pass

    def test_refresh(self):
        """Test case for refresh

        Refresh one particular workflow.  # noqa: E501
        """
        pass

    def test_refresh_version(self):
        """Test case for refresh_version

        Refresh one particular workflow version.  # noqa: E501
        """
        pass

    def test_register_checker_workflow(self):
        """Test case for register_checker_workflow

        Register a checker workflow and associates it with the given tool/workflow.  # noqa: E501
        """
        pass

    def test_remove_workflow_role(self):
        """Test case for remove_workflow_role

        Remove the specified user role for a workflow.  # noqa: E501
        """
        pass

    def test_request_doi_for_workflow_version(self):
        """Test case for request_doi_for_workflow_version

        Request a DOI for this version of a workflow.  # noqa: E501
        """
        pass

    def test_restub(self):
        """Test case for restub

        Restub a workflow  # noqa: E501
        """
        pass

    def test_secondary_descriptor_path(self):
        """Test case for secondary_descriptor_path

        Get the corresponding descriptor file from source control.  # noqa: E501
        """
        pass

    def test_secondary_descriptors(self):
        """Test case for secondary_descriptors

        Get the corresponding descriptor documents from source control.  # noqa: E501
        """
        pass

    def test_shared_workflows(self):
        """Test case for shared_workflows

        Retrieve all workflows shared with user.  # noqa: E501
        """
        pass

    def test_star_entry(self):
        """Test case for star_entry

        Star a workflow.  # noqa: E501
        """
        pass

    def test_update_labels(self):
        """Test case for update_labels

        Update the labels linked to a workflow.  # noqa: E501
        """
        pass

    def test_update_workflow(self):
        """Test case for update_workflow

        Update the workflow with the given workflow.  # noqa: E501
        """
        pass

    def test_update_workflow_default_version(self):
        """Test case for update_workflow_default_version

        Update the default version of a workflow.  # noqa: E501
        """
        pass

    def test_update_workflow_path(self):
        """Test case for update_workflow_path

        Reset the workflow paths.  # noqa: E501
        """
        pass

    def test_update_workflow_version(self):
        """Test case for update_workflow_version

        Update the workflow versions linked to a workflow.  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
