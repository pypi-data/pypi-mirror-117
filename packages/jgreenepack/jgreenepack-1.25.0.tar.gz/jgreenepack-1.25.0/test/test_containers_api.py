# coding: utf-8

"""
    Dockstore API

    This describes the dockstore API, a webservice that manages pairs of Docker images and associated metadata such as CWL documents and Dockerfiles used to build those images. Explore swagger.json for a Swagger 2.0 description of our API and explore openapi.yaml for OpenAPI 3.0 descriptions.  # noqa: E501

    OpenAPI spec version: 1.12.0-alpha.1-SNAPSHOT
    Contact: theglobalalliance@genomicsandhealth.org
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import jgreenepack
from jgreenepack.api.containers_api import ContainersApi  # noqa: E501
from jgreenepack.rest import ApiException


class TestContainersApi(unittest.TestCase):
    """ContainersApi unit test stubs"""

    def setUp(self):
        self.api = jgreenepack.api.containers_api.ContainersApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_add_test_parameter_files(self):
        """Test case for add_test_parameter_files

        Add test parameter files to a tag.  # noqa: E501
        """
        pass

    def test_all_published_containers(self):
        """Test case for all_published_containers

        List all published tools.  # noqa: E501
        """
        pass

    def test_delete_container(self):
        """Test case for delete_container

        Delete a tool.  # noqa: E501
        """
        pass

    def test_delete_test_parameter_files(self):
        """Test case for delete_test_parameter_files

        Delete test parameter files to a tag.  # noqa: E501
        """
        pass

    def test_dockerfile(self):
        """Test case for dockerfile

        Get the corresponding Dockerfile.  # noqa: E501
        """
        pass

    def test_get_container(self):
        """Test case for get_container

        Retrieve a tool.  # noqa: E501
        """
        pass

    def test_get_container_by_path(self):
        """Test case for get_container_by_path

        Get a list of tools by path.  # noqa: E501
        """
        pass

    def test_get_container_by_tool_path(self):
        """Test case for get_container_by_tool_path

        Get a tool by the specific tool path  # noqa: E501
        """
        pass

    def test_get_published_container(self):
        """Test case for get_published_container

        Get a published tool.  # noqa: E501
        """
        pass

    def test_get_published_container_by_path(self):
        """Test case for get_published_container_by_path

        Get a list of published tools by path.  # noqa: E501
        """
        pass

    def test_get_published_container_by_tool_path(self):
        """Test case for get_published_container_by_tool_path

        Get a published tool by the specific tool path.  # noqa: E501
        """
        pass

    def test_get_published_container_schema(self):
        """Test case for get_published_container_schema

        Get a published tool's schema by ID.  # noqa: E501
        """
        pass

    def test_get_published_containers_by_namespace(self):
        """Test case for get_published_containers_by_namespace

        List all published tools belonging to the specified namespace.  # noqa: E501
        """
        pass

    def test_get_starred_users(self):
        """Test case for get_starred_users

        Returns list of users who starred a tool.  # noqa: E501
        """
        pass

    def test_get_test_parameter_files(self):
        """Test case for get_test_parameter_files

        Get the corresponding test parameter files.  # noqa: E501
        """
        pass

    def test_get_tool_by_alias(self):
        """Test case for get_tool_by_alias

        Retrieves a tool by alias.  # noqa: E501
        """
        pass

    def test_get_tool_zip(self):
        """Test case for get_tool_zip

        Download a ZIP file of a tool and all associated files.  # noqa: E501
        """
        pass

    def test_get_users(self):
        """Test case for get_users

        Get users of a tool.  # noqa: E501
        """
        pass

    def test_primary_descriptor(self):
        """Test case for primary_descriptor

        Get the primary descriptor file.  # noqa: E501
        """
        pass

    def test_publish(self):
        """Test case for publish

        Publish or unpublish a tool.  # noqa: E501
        """
        pass

    def test_refresh(self):
        """Test case for refresh

        Refresh one particular tool.  # noqa: E501
        """
        pass

    def test_register_manual(self):
        """Test case for register_manual

        Register a tool manually, along with tags.  # noqa: E501
        """
        pass

    def test_secondary_descriptor_path(self):
        """Test case for secondary_descriptor_path

        Get the corresponding descriptor file.  # noqa: E501
        """
        pass

    def test_secondary_descriptors(self):
        """Test case for secondary_descriptors

        Get a list of secondary descriptor files.  # noqa: E501
        """
        pass

    def test_star_entry(self):
        """Test case for star_entry

        Star a tool.  # noqa: E501
        """
        pass

    def test_update_container(self):
        """Test case for update_container

        Update the tool with the given tool.  # noqa: E501
        """
        pass

    def test_update_labels(self):
        """Test case for update_labels

        Update the labels linked to a tool.  # noqa: E501
        """
        pass

    def test_update_tag_container_path(self):
        """Test case for update_tag_container_path

        Change the tool paths.  # noqa: E501
        """
        pass

    def test_update_tool_default_version(self):
        """Test case for update_tool_default_version

        Update the default version of the given tool.  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
