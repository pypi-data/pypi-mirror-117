{"version":3,"sources":["FlashCard.tsx","index.tsx"],"names":["useStyles","makeStyles","createStyles","root","fontFamily","theme","font","backgroundColor","secondaryBackgroundColor","display","flexDirection","alignItems","padding","header","width","textAlign","overflow","textOverflow","whiteSpace","container","flex","justifyContent","maxWidth","primary","color","primaryColor","fontWeight","fontSize","textTransform","secondary","darken","tooltip","margin","name","withStreamlitConnection","props","text","args","title","primaryText","secondaryText","aspectRatio","formatter","classes","height","useEffect","Streamlit","setFrameHeight","setComponentValue","className","style","Tooltip","placement","interactive","leaveDelay","arrow","isNaN","parseFloat","numeral","format","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAuBMA,EAAYC,YAChBC,YAAa,CACXC,KAAM,CACJC,WAAY,gBAAGC,EAAH,EAAGA,MAAH,cAAeA,QAAf,IAAeA,OAAf,EAAeA,EAAOC,MAElCC,gBAAiB,gBAAGF,EAAH,EAAGA,MAAH,cAAeA,QAAf,IAAeA,OAAf,EAAeA,EAAOG,0BACvCC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,QAAS,IAEXC,OAAQ,CACNC,MAAO,OACPC,UAAW,OACXC,SAAU,SACVC,aAAc,WACdC,WAAY,UAEdC,UAAW,CACTC,KAAM,EACNX,QAAS,OACTC,cAAe,SACfW,eAAgB,SAChBV,WAAY,SACZW,SAAU,QAEZC,QAAS,CACPC,MAAO,gBAAGnB,EAAH,EAAGA,MAAH,cAAeA,QAAf,IAAeA,OAAf,EAAeA,EAAOoB,cAC7BC,WAAY,IACZC,SAAS,GAAD,OAAK,GAAL,MACRL,SAAU,OACVM,cAAe,YACfZ,SAAU,SACVC,aAAc,WACdC,WAAY,UAEdW,UAAW,CACTL,MAAO,gBAAGnB,EAAH,EAAGA,MAAH,OAAeyB,aAAY,OAALzB,QAAK,IAALA,OAAA,EAAAA,EAAOoB,eAAgB,OAAQ,MAE9DM,QAAS,CACPC,OAAQ,EACRL,SAAU,MAGd,CAAEM,KAAM,cAyDKC,eAtD6B,SAACC,GAC3C,IAagBC,EAbRC,EAAgBF,EAAhBE,KAAMvB,EAAUqB,EAAVrB,MACd,EAMIuB,EALFC,EADF,EACEA,MACAC,EAFF,EAEEA,YACAC,EAHF,EAGEA,cAHF,IAIEC,mBAJF,MAIgB,CAAC,GAAI,GAJrB,MAKEC,iBALF,MAKc,MALd,EAQMC,EAAU3C,EAAUmC,GAEpBS,EAAU9B,EAAQ2B,EAAY,GAAK,EAAOA,EAAY,GAa5D,OALAI,qBAAU,WACRC,IAAUC,eAAeH,GACzBE,IAAUE,kBAAkB,CAAClC,EAAO8B,MACnC,CAAC9B,EAAO8B,IAGT,sBAAKK,UAAWN,EAAQxC,KAAM+C,MAAO,CAAEN,UAAvC,UACE,wBAAQK,UAAWN,EAAQ9B,OAA3B,SAAoCyB,IACpC,sBAAKW,UAAWN,EAAQxB,UAAxB,UACE,cAACgC,EAAA,EAAD,CACER,QAAS,CAAEZ,QAASY,EAAQZ,SAC5BqB,UAAU,MACVC,aAAW,EACXC,WAAY,IACZC,OAAK,EACLjB,MACEE,EAAa,UAAMD,EAAN,YAAqBC,GAAkBD,EAPxD,SAUE,qBAAKU,UAAWN,EAAQpB,QAAxB,UAzBQa,EAyBiCG,EAxB1CiB,MAAMC,WAAWrB,IAEfA,EADEsB,IAAQD,WAAWrB,IAAOuB,OAAOjB,QAyBrCF,GACC,qBAAKS,UAAWN,EAAQd,UAAxB,SAAoCW,aC5G9CoB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ef61fddc.chunk.js","sourcesContent":["import {\n  ComponentProps,\n  Streamlit,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React, { useEffect } from \"react\"\nimport {\n  makeStyles,\n  createStyles,\n  Theme,\n  darken,\n  Tooltip,\n} from \"@material-ui/core\"\nimport numeral from \"numeral\"\n\ninterface FlashCardProps {\n  title: string\n  primaryText: string\n  secondaryText?: string\n  aspectRatio?: [number, number]\n  formatter?: string\n}\n\nconst useStyles = makeStyles<Theme, ComponentProps>(\n  createStyles({\n    root: {\n      fontFamily: ({ theme }) => theme?.font,\n      // border: ({ theme }) => `1px solid ${theme?.primaryColor}`,\n      backgroundColor: ({ theme }) => theme?.secondaryBackgroundColor,\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      padding: 16,\n    },\n    header: {\n      width: \"100%\",\n      textAlign: \"left\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      whiteSpace: \"nowrap\",\n    },\n    container: {\n      flex: 1,\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      maxWidth: \"100%\",\n    },\n    primary: {\n      color: ({ theme }) => theme?.primaryColor,\n      fontWeight: 600,\n      fontSize: `${12}vw`,\n      maxWidth: \"100%\",\n      textTransform: \"uppercase\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      whiteSpace: \"nowrap\",\n    },\n    secondary: {\n      color: ({ theme }) => darken(theme?.primaryColor || \"#333\", 0.3),\n    },\n    tooltip: {\n      margin: 0,\n      fontSize: 16,\n    },\n  }),\n  { name: \"FlashCard\" }\n)\n\nconst FlashCard: React.FC<ComponentProps> = (props) => {\n  const { args, width } = props\n  const {\n    title,\n    primaryText,\n    secondaryText,\n    aspectRatio = [16, 9],\n    formatter = \"0,0\",\n  } = args as FlashCardProps\n\n  const classes = useStyles(props)\n\n  const height = (width * aspectRatio[1] * 1.0) / aspectRatio[0]\n\n  const format = (text: string) => {\n    if (!isNaN(parseFloat(text)))\n      return numeral(parseFloat(text)).format(formatter)\n    return text\n  }\n\n  useEffect(() => {\n    Streamlit.setFrameHeight(height)\n    Streamlit.setComponentValue([width, height])\n  }, [width, height])\n\n  return (\n    <div className={classes.root} style={{ height }}>\n      <header className={classes.header}>{title}</header>\n      <div className={classes.container}>\n        <Tooltip\n          classes={{ tooltip: classes.tooltip }}\n          placement=\"top\"\n          interactive\n          leaveDelay={1000}\n          arrow\n          title={\n            secondaryText ? `${primaryText} ${secondaryText}` : primaryText\n          }\n        >\n          <div className={classes.primary}>{format(primaryText)}</div>\n        </Tooltip>\n        {secondaryText && (\n          <div className={classes.secondary}>{secondaryText}</div>\n        )}\n      </div>\n    </div>\n  )\n}\n\n// \"withStreamlitConnection\" is a wrapper function. It bootstraps the\n// connection between your component and the Streamlit app, and handles\n// passing arguments from Python -> Component.\n//\n// You don't need to edit withStreamlitConnection (but you're welcome to!).\nexport default withStreamlitConnection(FlashCard)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport FlashCard from \"./FlashCard\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <FlashCard />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}