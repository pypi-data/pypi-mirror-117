{"version":3,"sources":["components/TitleCard.tsx","util/converter.ts","../node_modules/@material-ui/core/esm/TableContainer/TableContainer.js","pages/index/Index.tsx","service/cluster.ts"],"names":["useStyles","makeStyles","theme","card","padding","spacing","paddingTop","margin","map","e","join","title","fontSize","typography","fontWeight","color","palette","text","secondary","marginBottom","body","TitleCard","children","classes","className","memoryConverter","bytes","toFixed","TableContainer","React","props","ref","_props$component","component","Component","other","_objectWithoutProperties","_extends","clsx","root","withStyles","width","overflowX","name","useStyle","label","useIndex","useState","rayConfig","setConfig","nodes","setNodes","useEffect","get","then","res","data","config","getNodeList","summary","Index","clusterName","version","imageUrl","href","target","rel","sourceCodeLink","TableHead","TableCell","TableBody","Object","entries","key","value","TableRow","JSON","stringify","getVal"],"mappings":"qIAAA,sCAGMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAASF,EAAMG,QAAQ,GACvBC,WAAYJ,EAAMG,QAAQ,KAC1BE,OAAQ,CAACL,EAAMG,QAAQ,GAAIH,EAAMG,QAAQ,IAAIG,KAAI,SAACC,GAAD,gBAAUA,EAAV,SAAiBC,KAAK,MAEzEC,MAAO,CACLC,SAAUV,EAAMW,WAAWD,SAAW,EACtCE,WAAY,IACZC,MAAOb,EAAMc,QAAQC,KAAKC,UAC1BC,aAAcjB,EAAMG,QAAQ,IAE9Be,KAAM,CACJhB,QAASF,EAAMG,QAAQ,SAiBZgB,IAbG,SAAC,GAGsC,IAFvDV,EAEsD,EAFtDA,MACAW,EACsD,EADtDA,SAEMC,EAAUvB,IAChB,OACE,kBAAC,IAAD,CAAOwB,UAAWD,EAAQpB,MACxB,yBAAKqB,UAAWD,EAAQZ,OAAQA,GAChC,yBAAKa,UAAWD,EAAQH,MAAOE,M,iCC5BrC,kCAAO,IAAMG,EAAkB,SAACC,GAC9B,OAAIA,EAAQ,KACJ,GAAN,OAAUA,EAAV,MAGEA,EAAK,SAAG,KAAQ,GACZ,GAAN,QAAWA,EAAK,SAAG,KAAQ,IAAGC,QAAQ,GAAtC,MAGED,EAAK,SAAG,KAAQ,GACZ,GAAN,QAAWA,EAAK,SAAG,KAAQ,IAAGC,QAAQ,GAAtC,MAGED,EAAK,SAAG,KAAQ,GACZ,GAAN,QAAWA,EAAK,SAAG,KAAQ,IAAGC,QAAQ,GAAtC,MAGED,EAAK,SAAG,KAAQ,GACZ,GAAN,QAAWA,EAAK,SAAG,KAAQ,IAAGC,QAAQ,GAAtC,MAGED,EAAK,SAAG,KAAQ,GACZ,GAAN,QAAWA,EAAK,SAAG,KAAQ,IAAGC,QAAQ,GAAtC,MAGK,K,iCCzBT,8CAaIC,EAA8BC,cAAiB,SAAwBC,EAAOC,GAChF,IAAIR,EAAUO,EAAMP,QAChBC,EAAYM,EAAMN,UAClBQ,EAAmBF,EAAMG,UACzBC,OAAiC,IAArBF,EAA8B,MAAQA,EAClDG,EAAQC,YAAyBN,EAAO,CAAC,UAAW,YAAa,cAErE,OAAoBD,gBAAoBK,EAAWG,YAAS,CAC1DN,IAAKA,EACLP,UAAWc,YAAKf,EAAQgB,KAAMf,IAC7BW,OA2BUK,gBA5CK,CAElBD,KAAM,CACJE,MAAO,OACPC,UAAW,SAwCmB,CAChCC,KAAM,qBADOH,CAEZZ,I,2NCnCGgB,EAAW3C,aAAW,SAACC,GAAD,MAAY,CACtCqC,KAAM,CACJnC,QAASF,EAAMG,QAAQ,IAEzBwC,MAAO,CACL/B,WAAY,YAWVgC,EAAW,WAAO,IAAD,EACUC,qBADV,mBACdC,EADc,KACHC,EADG,OAEKF,mBAAuB,IAF5B,mBAEdG,EAFc,KAEPC,EAFO,KAkBrB,OAfAC,qBAAU,WChCHC,YAAkB,kBDiCRC,MAAK,SAACC,GAAS,IAAD,KAC3B,OAAIA,QAAJ,IAAIA,GAAJ,UAAIA,EAAKC,YAAT,iBAAI,EAAWA,YAAf,aAAI,EAAiBC,SACnBR,EAAUM,EAAIC,KAAKA,KAAKC,aAG3B,IACHL,qBAAU,WACRM,cAAcJ,MAAK,SAACC,GAAS,IAAD,KAC1B,OAAIA,QAAJ,IAAIA,GAAJ,UAAIA,EAAKC,YAAT,iBAAI,EAAWA,YAAf,aAAI,EAAiBG,UACnBR,EAASI,EAAIC,KAAKA,KAAKG,cAG1B,IAEI,CAAEX,YAAWE,UA0DPU,UAvDD,WAAO,IACXZ,EAAcF,IAAdE,UACFzB,EAAUqB,IAEhB,OACE,yBAAKpB,UAAWD,EAAQgB,MACtB,kBAAClB,EAAA,EAAD,CAAWV,OAAgB,OAATqC,QAAS,IAATA,OAAA,EAAAA,EAAWa,cAAe,WAC1C,0DAAgCC,MACtB,OAATd,QAAS,IAATA,OAAA,EAAAA,EAAWe,WACV,wCACa,IACX,uBACEC,KAAMhB,EAAUe,SAChBE,OAAO,SACPC,IAAI,uBAEHlB,EAAUe,YAIP,OAATf,QAAS,IAATA,OAAA,EAAAA,EAAWmB,iBACV,0CACe,IACb,uBACEH,KAAMhB,EAAUmB,eAChBF,OAAO,SACPC,IAAI,uBAEHlB,EAAUmB,kBAKlBnB,GACC,kBAAC3B,EAAA,EAAD,CAAWV,MAAM,UACf,kBAACiB,EAAA,EAAD,KACE,kBAACwC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,YACA,kBAACA,EAAA,EAAD,eAEF,kBAACC,EAAA,EAAD,KACGC,OAAOC,QAAQxB,GAAWxC,KAAI,mCAAEiE,EAAF,KAAOC,EAAP,YAC7B,kBAACC,EAAA,EAAD,KACE,kBAACN,EAAA,EAAD,CAAW7C,UAAWD,EAAQsB,OAAQ4B,GACtC,kBAACJ,EAAA,EAAD,KAxEH,SAACI,EAAaC,GAC3B,MAAY,oBAARD,EACKhD,YAAwB,KAARiD,EAAe,MAEjCE,KAAKC,UAAUH,GAoEMI,CAAOL,EAAKC","file":"static/js/14.3a99f5c8.chunk.js","sourcesContent":["import { makeStyles, Paper } from \"@material-ui/core\";\nimport React, { PropsWithChildren, ReactNode } from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(1.5),\n    margin: [theme.spacing(2), theme.spacing(1)].map((e) => `${e}px`).join(\" \"),\n  },\n  title: {\n    fontSize: theme.typography.fontSize + 2,\n    fontWeight: 500,\n    color: theme.palette.text.secondary,\n    marginBottom: theme.spacing(1),\n  },\n  body: {\n    padding: theme.spacing(0.5),\n  },\n}));\n\nconst TitleCard = ({\n  title,\n  children,\n}: PropsWithChildren<{ title: ReactNode | string }>) => {\n  const classes = useStyles();\n  return (\n    <Paper className={classes.card}>\n      <div className={classes.title}>{title}</div>\n      <div className={classes.body}>{children}</div>\n    </Paper>\n  );\n};\n\nexport default TitleCard;\n","export const memoryConverter = (bytes: number) => {\n  if (bytes < 1024) {\n    return `${bytes}KB`;\n  }\n\n  if (bytes < 1024 ** 2) {\n    return `${(bytes / 1024 ** 1).toFixed(2)}KB`;\n  }\n\n  if (bytes < 1024 ** 3) {\n    return `${(bytes / 1024 ** 2).toFixed(2)}MB`;\n  }\n\n  if (bytes < 1024 ** 4) {\n    return `${(bytes / 1024 ** 3).toFixed(2)}GB`;\n  }\n\n  if (bytes < 1024 ** 5) {\n    return `${(bytes / 1024 ** 4).toFixed(2)}TB`;\n  }\n\n  if (bytes < 1024 ** 6) {\n    return `${(bytes / 1024 ** 5).toFixed(2)}TB`;\n  }\n\n  return \"\";\n};\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    width: '100%',\n    overflowX: 'auto'\n  }\n};\nvar TableContainer = /*#__PURE__*/React.forwardRef(function TableContainer(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableContainer.propTypes = {\n  /**\n   * The table itself, normally `<Table />`\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableContainer'\n})(TableContainer);","import {\n  makeStyles,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { version } from \"../../../package.json\";\nimport TitleCard from \"../../components/TitleCard\";\nimport { getRayConfig } from \"../../service/cluster\";\nimport { getNodeList } from \"../../service/node\";\nimport { RayConfig } from \"../../type/config\";\nimport { NodeDetail } from \"../../type/node\";\nimport { memoryConverter } from \"../../util/converter\";\n\nconst useStyle = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n  label: {\n    fontWeight: \"bold\",\n  },\n}));\n\nconst getVal = (key: string, value: any) => {\n  if (key === \"containerMemory\") {\n    return memoryConverter(value * 1024 * 1024);\n  }\n  return JSON.stringify(value);\n};\n\nconst useIndex = () => {\n  const [rayConfig, setConfig] = useState<RayConfig>();\n  const [nodes, setNodes] = useState<NodeDetail[]>([]);\n  useEffect(() => {\n    getRayConfig().then((res) => {\n      if (res?.data?.data?.config) {\n        setConfig(res.data.data.config);\n      }\n    });\n  }, []);\n  useEffect(() => {\n    getNodeList().then((res) => {\n      if (res?.data?.data?.summary) {\n        setNodes(res.data.data.summary);\n      }\n    });\n  }, []);\n\n  return { rayConfig, nodes };\n};\n\nconst Index = () => {\n  const { rayConfig } = useIndex();\n  const classes = useStyle();\n\n  return (\n    <div className={classes.root}>\n      <TitleCard title={rayConfig?.clusterName || \"SUMMARY\"}>\n        <p>Dashboard Frontend Version: {version}</p>\n        {rayConfig?.imageUrl && (\n          <p>\n            Image Url:{\" \"}\n            <a\n              href={rayConfig.imageUrl}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {rayConfig.imageUrl}\n            </a>\n          </p>\n        )}\n        {rayConfig?.sourceCodeLink && (\n          <p>\n            Source Code:{\" \"}\n            <a\n              href={rayConfig.sourceCodeLink}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {rayConfig.sourceCodeLink}\n            </a>\n          </p>\n        )}\n      </TitleCard>\n      {rayConfig && (\n        <TitleCard title=\"Config\">\n          <TableContainer>\n            <TableHead>\n              <TableCell>Key</TableCell>\n              <TableCell>Value</TableCell>\n            </TableHead>\n            <TableBody>\n              {Object.entries(rayConfig).map(([key, value]) => (\n                <TableRow>\n                  <TableCell className={classes.label}>{key}</TableCell>\n                  <TableCell>{getVal(key, value)}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </TableContainer>\n        </TitleCard>\n      )}\n    </div>\n  );\n};\n\nexport default Index;\n","import { RayConfigRsp } from \"../type/config\";\nimport { get } from \"./requestHandlers\";\n\nexport const getRayConfig = () => {\n  return get<RayConfigRsp>(\"api/ray_config\");\n};\n"],"sourceRoot":""}