# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import event_pb2 as src_dot_ray_dot_protobuf_dot_event__pb2


class ReportEventServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ReportEvents = channel.unary_unary(
        '/ray.rpc.ReportEventService/ReportEvents',
        request_serializer=src_dot_ray_dot_protobuf_dot_event__pb2.ReportEventsRequest.SerializeToString,
        response_deserializer=src_dot_ray_dot_protobuf_dot_event__pb2.ReportEventsReply.FromString,
        )


class ReportEventServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def ReportEvents(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ReportEventServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ReportEvents': grpc.unary_unary_rpc_method_handler(
          servicer.ReportEvents,
          request_deserializer=src_dot_ray_dot_protobuf_dot_event__pb2.ReportEventsRequest.FromString,
          response_serializer=src_dot_ray_dot_protobuf_dot_event__pb2.ReportEventsReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'ray.rpc.ReportEventService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
