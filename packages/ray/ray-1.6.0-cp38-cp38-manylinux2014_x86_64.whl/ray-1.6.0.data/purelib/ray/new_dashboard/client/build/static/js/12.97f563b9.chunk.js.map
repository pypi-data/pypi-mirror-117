{"version":3,"sources":["components/TitleCard.tsx","components/LogView/LogVirtualView.tsx","pages/cmd/CMDResult.tsx","service/util.ts"],"names":["useStyles","makeStyles","theme","card","padding","spacing","paddingTop","margin","map","e","join","title","fontSize","typography","fontWeight","color","palette","text","secondary","marginBottom","body","TitleCard","children","classes","className","uniqueKeySelector","Math","random","toString","slice","timeReg","LogVirtualView","content","width","height","getDefaultTheme","keywords","language","focusLine","style","listRef","onScrollBottom","revert","startTime","endTime","useState","logs","setLogs","total","length","timmer","useRef","el","outter","current","itemRenderer","index","s","i","origin","key","overflowX","whiteSpace","marginRight","display","low","highlight","value","v","value2react","type","tagName","properties","React","createElement","includes","afterChildren","vals","split","tmp","shift","push","useEffect","originContent","clearTimeout","setTimeout","time","match","filter","bool","dayjs","isAfter","isBefore","scrollTo","scrollFunc","event","target","scrollTop","clientHeight","scrollHeight","addEventListener","removeEventListener","ref","outerRef","itemSize","itemCount","root","table","marginTop","pageMeta","search","CMDResult","props","params","cmd","ip","pid","result","setResult","option","setOption","executeJstat","useCallback","options","axios","get","getJstat","then","rsp","data","output","msg","catch","err","getJstack","getJmap","Paper","Grid","container","item","Select","onChange","MenuItem","Button","onClick"],"mappings":"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","file":"static/js/12.97f563b9.chunk.js","sourcesContent":["import { makeStyles, Paper } from \"@material-ui/core\";\nimport React, { PropsWithChildren, ReactNode } from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(1.5),\n    margin: [theme.spacing(2), theme.spacing(1)].map((e) => `${e}px`).join(\" \"),\n  },\n  title: {\n    fontSize: theme.typography.fontSize + 2,\n    fontWeight: 500,\n    color: theme.palette.text.secondary,\n    marginBottom: theme.spacing(1),\n  },\n  body: {\n    padding: theme.spacing(0.5),\n  },\n}));\n\nconst TitleCard = ({\n  title,\n  children,\n}: PropsWithChildren<{ title: ReactNode | string }>) => {\n  const classes = useStyles();\n  return (\n    <Paper className={classes.card}>\n      <div className={classes.title}>{title}</div>\n      <div className={classes.body}>{children}</div>\n    </Paper>\n  );\n};\n\nexport default TitleCard;\n","import dayjs from \"dayjs\";\nimport low from \"lowlight\";\nimport React, {\n  CSSProperties,\n  MutableRefObject,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport { FixedSizeList as List } from \"react-window\";\nimport \"./darcula.css\";\nimport \"./github.css\";\nimport \"./index.css\";\nimport { getDefaultTheme } from \"../../App\";\n\nconst uniqueKeySelector = () => Math.random().toString(16).slice(-8);\n\nconst timeReg =\n  /(?:(?!0000)[0-9]{4}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[0-9]{2}(?:0[48]|[2468][048]|[13579][26])|(?:0[48]|[2468][048]|[13579][26])00)-02-29)\\s+([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]/;\n\nconst value2react = (\n  { type, tagName, properties, children, value = \"\" }: any,\n  key: string,\n  keywords: string = \"\",\n) => {\n  switch (type) {\n    case \"element\":\n      return React.createElement(\n        tagName,\n        {\n          className: properties.className[0],\n          key: `${key}line${uniqueKeySelector()}`,\n        },\n        children.map((e: any, i: number) =>\n          value2react(e, `${key}-${i}`, keywords),\n        ),\n      );\n    case \"text\":\n      if (keywords && value.includes(keywords)) {\n        const afterChildren = [];\n        const vals = value.split(keywords);\n        let tmp = vals.shift();\n        if (!tmp) {\n          return React.createElement(\n            \"span\",\n            { className: \"find-kws\" },\n            keywords,\n          );\n        }\n        while (typeof tmp === \"string\") {\n          if (tmp !== \"\") {\n            afterChildren.push(tmp);\n          } else {\n            afterChildren.push(\n              React.createElement(\"span\", { className: \"find-kws\" }, keywords),\n            );\n          }\n\n          tmp = vals.shift();\n          if (tmp) {\n            afterChildren.push(\n              React.createElement(\"span\", { className: \"find-kws\" }, keywords),\n            );\n          }\n        }\n        return afterChildren;\n      }\n      return value;\n    default:\n      return [];\n  }\n};\n\nexport type LogVirtualViewProps = {\n  content: string;\n  width?: number;\n  height?: number;\n  fontSize?: number;\n  theme?: \"light\" | \"dark\";\n  language?: string;\n  focusLine?: number;\n  keywords?: string;\n  style?: { [key: string]: string | number };\n  listRef?: MutableRefObject<HTMLDivElement | null>;\n  onScrollBottom?: (event: Event) => void;\n  revert?: boolean;\n  startTime?: string;\n  endTime?: string;\n};\n\nconst LogVirtualView: React.FC<LogVirtualViewProps> = ({\n  content,\n  width = \"100%\",\n  height,\n  fontSize = 12,\n  theme = getDefaultTheme(),\n  keywords = \"\",\n  language = \"dos\",\n  focusLine = 1,\n  style = {},\n  listRef,\n  onScrollBottom,\n  revert = false,\n  startTime,\n  endTime,\n}) => {\n  const [logs, setLogs] = useState<{ i: number; origin: string }[]>([]);\n  const total = logs.length;\n  const timmer = useRef<ReturnType<typeof setTimeout>>();\n  const el = useRef<List>(null);\n  const outter = useRef<HTMLDivElement>(null);\n  if (listRef) {\n    listRef.current = outter.current;\n  }\n  const itemRenderer = ({\n    index,\n    style: s,\n  }: {\n    index: number;\n    style: CSSProperties;\n  }) => {\n    const { i, origin } = logs[revert ? logs.length - 1 - index : index];\n    return (\n      <div\n        key={`${index}list`}\n        style={{ ...s, overflowX: \"visible\", whiteSpace: \"pre\" }}\n      >\n        <span\n          style={{\n            marginRight: 4,\n            width: `${logs.length}`.length * 6 + 4,\n            color: \"#999\",\n            display: \"inline-block\",\n          }}\n        >\n          {i + 1}\n        </span>\n        {low\n          .highlight(language, origin)\n          .value.map((v) => value2react(v, index.toString(), keywords))}\n      </div>\n    );\n  };\n\n  useEffect(() => {\n    const originContent = content.split(\"\\n\");\n    if (timmer.current) {\n      clearTimeout(timmer.current);\n    }\n    timmer.current = setTimeout(() => {\n      setLogs(\n        originContent\n          .map((e, i) => ({\n            i,\n            origin: e,\n            time: (e?.match(timeReg) || [\"\"])[0],\n          }))\n          .filter((e) => {\n            let bool = e.origin.includes(keywords);\n            if (\n              e.time &&\n              startTime &&\n              !dayjs(e.time).isAfter(dayjs(startTime))\n            ) {\n              bool = false;\n            }\n            if (e.time && endTime && !dayjs(e.time).isBefore(dayjs(endTime))) {\n              bool = false;\n            }\n            return bool;\n          })\n          .map((e) => ({\n            ...e,\n          })),\n      );\n    }, 500);\n  }, [content, keywords, language, startTime, endTime]);\n\n  useEffect(() => {\n    if (el.current) {\n      el.current?.scrollTo((focusLine - 1) * (fontSize + 6));\n    }\n  }, [focusLine, fontSize]);\n\n  useEffect(() => {\n    if (outter.current) {\n      const scrollFunc = (event: any) => {\n        const { target } = event;\n        if (\n          target &&\n          target.scrollTop + target.clientHeight === target.scrollHeight\n        ) {\n          if (onScrollBottom) {\n            onScrollBottom(event);\n          }\n        }\n      };\n      outter.current.addEventListener(\"scroll\", scrollFunc);\n      return () => outter?.current?.removeEventListener(\"scroll\", scrollFunc);\n    }\n  }, [onScrollBottom]);\n\n  return (\n    <List\n      height={height || (content.split(\"\\n\").length + 1) * 18}\n      width={width}\n      ref={el}\n      outerRef={outter}\n      className={`hljs-${theme}`}\n      style={{\n        fontSize,\n        ...style,\n      }}\n      itemSize={fontSize + 6}\n      itemCount={total}\n    >\n      {itemRenderer}\n    </List>\n  );\n};\n\nexport default LogVirtualView;\n","import {\n  Button,\n  Grid,\n  makeStyles,\n  MenuItem,\n  Paper,\n  Select,\n} from \"@material-ui/core\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport LogVirtualView from \"../../components/LogView/LogVirtualView\";\nimport TitleCard from \"../../components/TitleCard\";\nimport { getJmap, getJstack, getJstat } from \"../../service/util\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(4),\n    width: \"100%\",\n  },\n  table: {\n    marginTop: theme.spacing(4),\n    padding: theme.spacing(2),\n  },\n  pageMeta: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n  },\n  search: {\n    margin: theme.spacing(1),\n  },\n}));\n\nconst CMDResult = (\n  props: RouteComponentProps<{ cmd: string; ip: string; pid: string }>,\n) => {\n  const classes = useStyles();\n  const {\n    match: { params },\n  } = props;\n  const { cmd, ip, pid } = params;\n  const [result, setResult] = useState<string>();\n  const [option, setOption] = useState(\"gcutil\");\n  const executeJstat = useCallback(\n    () =>\n      getJstat(ip, pid, option)\n        .then((rsp) => {\n          if (rsp.data.result) {\n            setResult(rsp.data.data.output);\n          } else {\n            setResult(rsp.data.msg);\n          }\n        })\n        .catch((err) => setResult(err.toString())),\n    [ip, pid, option],\n  );\n\n  useEffect(() => {\n    switch (cmd) {\n      case \"jstack\":\n        getJstack(ip, pid)\n          .then((rsp) => {\n            if (rsp.data.result) {\n              setResult(rsp.data.data.output);\n            } else {\n              setResult(rsp.data.msg);\n            }\n          })\n          .catch((err) => setResult(err.toString()));\n        break;\n      case \"jmap\":\n        getJmap(ip, pid)\n          .then((rsp) => {\n            if (rsp.data.result) {\n              setResult(rsp.data.data.output);\n            } else {\n              setResult(rsp.data.msg);\n            }\n          })\n          .catch((err) => setResult(err.toString()));\n        break;\n      case \"jstat\":\n        executeJstat();\n        break;\n      default:\n        setResult(`Command ${cmd} is not supported.`);\n        break;\n    }\n  }, [cmd, executeJstat, ip, pid]);\n\n  return (\n    <div className={classes.root}>\n      <TitleCard title={cmd}>\n        {cmd === \"jstat\" && (\n          <Paper className={classes.pageMeta}>\n            <Grid container spacing={1}>\n              <Grid item>\n                <Select\n                  value={option}\n                  onChange={(e) => setOption(e.target.value as string)}\n                >\n                  {[\n                    \"class\",\n                    \"compiler\",\n                    \"gc\",\n                    \"gccapacity\",\n                    \"gcmetacapacity\",\n                    \"gcnew\",\n                    \"gcnewcapacity\",\n                    \"gcold\",\n                    \"gcoldcapacity\",\n                    \"gcutil\",\n                    \"gccause\",\n                    \"printcompilation\",\n                  ].map((e) => (\n                    <MenuItem value={e}>{e}</MenuItem>\n                  ))}\n                </Select>\n              </Grid>\n              <Grid item>\n                <Button onClick={executeJstat}>Execute</Button>\n              </Grid>\n            </Grid>\n          </Paper>\n        )}\n      </TitleCard>\n      <TitleCard title={`IP: ${ip} / Pid: ${pid}`}>\n        <LogVirtualView\n          content={result || \"loading\"}\n          language=\"prolog\"\n          height={800}\n        />\n      </TitleCard>\n    </div>\n  );\n};\n\nexport default CMDResult;\n","import axios from \"axios\";\n\ntype CMDRsp = {\n  result: boolean;\n  msg: string;\n  data: {\n    output: string;\n  };\n};\n\nexport const getJstack = (ip: string, pid: string) => {\n  return axios.get<CMDRsp>(\"utils/jstack\", {\n    params: {\n      ip,\n      pid,\n    },\n  });\n};\n\nexport const getJmap = (ip: string, pid: string) => {\n  return axios.get<CMDRsp>(\"utils/jmap\", {\n    params: {\n      ip,\n      pid,\n    },\n  });\n};\n\nexport const getJstat = (ip: string, pid: string, options: string) => {\n  return axios.get<CMDRsp>(\"utils/jstat\", {\n    params: {\n      ip,\n      pid,\n      options,\n    },\n  });\n};\n\ntype NamespacesRsp = {\n  result: boolean;\n  msg: string;\n  data: {\n    namespaces: {\n      namespaceId: string;\n      hostNameList: string[];\n    }[];\n  };\n};\n\nexport const getNamespaces = () => {\n  return axios.get<NamespacesRsp>(\"namespaces\");\n};\n"],"sourceRoot":""}