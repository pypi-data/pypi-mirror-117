graft views_extraction

global-exclude .*

# Byte-compiled / optimized / DLL files
global-exclude __pycache__/
global-exclude *.py[cod]
global-exclude *$py.class

# C extensions
global-exclude *.so

# Distribution / packaging
global-exclude .Python
global-exclude build/
global-exclude develop-eggs/
global-exclude dist/
global-exclude downloads/
global-exclude eggs/
global-exclude .eggs/
global-exclude lib/
global-exclude lib64/
global-exclude parts/
global-exclude sdist/
global-exclude var/
global-exclude wheels/
global-exclude pip-wheel-metadata/
global-exclude share/python-wheels/
global-exclude *.egg-info/
global-exclude .installed.cfg
global-exclude *.egg

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
global-exclude *.manifest
global-exclude *.spec

# Installer logs
global-exclude pip-log.txt
global-exclude pip-delete-this-directory.txt

# Unit test / coverage reports
global-exclude htmlcov/
global-exclude .tox/
global-exclude .nox/
global-exclude .coverage
global-exclude .coverage.*
global-exclude .cache
global-exclude nosetests.xml
global-exclude coverage.xml
global-exclude *.cover
global-exclude *.py,cover
global-exclude .hypothesis/
global-exclude .pytest_cache/

# Translations
global-exclude *.mo
global-exclude *.pot

# Django stuff:
global-exclude *.log
global-exclude local_settings.py
global-exclude db.sqlite3
global-exclude db.sqlite3-journal

# Flask stuff:
global-exclude instance/
global-exclude .webassets-cache

global-exclude # Scrapy stuff:
global-exclude .scrapy

# Sphinx documentation
global-exclude docs/_build/

# PyBuilder
global-exclude target/

# Jupyter Notebook
global-exclude .ipynb_checkpoints

# IPython
global-exclude profile_default/
global-exclude ipython_config.py

# pyenv
global-exclude .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock
 
# PEP 582; used by e.g. github.com/David-OConnor/pyflow
global-exclude __pypackages__/

# Celery stuff
global-exclude celerybeat-schedule
global-exclude celerybeat.pid

# SageMath parsed files
global-exclude *.sage.py

# Environments
global-exclude .env
global-exclude .venv
global-exclude env/
global-exclude venv/
global-exclude ENV/
global-exclude env.bak/
global-exclude venv.bak/
 
# Spyder project settings
global-exclude .spyderproject
global-exclude .spyproject
 
# Rope project settings
global-exclude .ropeproject
global-exclude 

# mkdocs documentation
global-exclude /site
global-exclude 

# mypy
global-exclude .mypy_cache/
global-exclude .dmypy.json
global-exclude dmypy.json

# Pyre type checker
global-exclude .pyre/ 
global-exclude .idea/
global-exclude .vscode/
