{"version":3,"file":"lib_index_js.cdf0113a65324a545def.js","mappings":";;;;;;;;;;;;;;;;;AAA8D;AACC;AAC/D;AACA;AACA;AACA;AACA,wBAAwB,KAAK;AAC7B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,wEAAmB;AAClC,eAAe,yEAAgB;AAC/B;AACA;AACA;AACA,gBAAgB,UAAU;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,iEAAe,MAAM,EAAC","sources":["webpack://jupyterlab-filebrowser-terminal/./lib/index.js"],"sourcesContent":["import { IFileBrowserFactory } from '@jupyterlab/filebrowser';\nimport { ISettingRegistry } from '@jupyterlab/settingregistry';\nfunction changeTerminalDir(session, path) {\n    // Send\n    session.send({\n        type: 'stdin',\n        content: [`cd ${path}\\n`]\n    });\n}\n/**\n * Initialization data for the jupyterlab-filebrowser-terminal extension.\n */\nconst plugin = {\n    id: 'jupyterlab-filebrowser-terminal:plugin',\n    autoStart: true,\n    requires: [IFileBrowserFactory],\n    optional: [ISettingRegistry],\n    activate: (app, fileBrowserFactory, settingRegistry) => {\n        console.log('JupyterLab extension jupyterlab-filebrowser-terminal is activated!');\n        // Get filebrowser tracker\n        const { tracker } = fileBrowserFactory;\n        // Get current filebrowser path\n        function getCurrentPath() {\n            const widget = tracker.currentWidget;\n            return widget.model.path;\n        }\n        // Add an application command\n        const command = 'filebrowser:open-in-terminal';\n        app.commands.addCommand(command, {\n            label: 'Open in Terminal',\n            execute: () => {\n                app.commands\n                    .execute('terminal:create-new')\n                    .then((widget) => {\n                    const terminal = widget.content;\n                    const path = getCurrentPath();\n                    changeTerminalDir(terminal.session, path);\n                });\n            },\n            isEnabled: () => app.serviceManager.terminals.isAvailable()\n        });\n        app.contextMenu.addItem({\n            command: command,\n            selector: '.jp-DirListing-content'\n        });\n    }\n};\nexport default plugin;\n"],"names":[],"sourceRoot":""}