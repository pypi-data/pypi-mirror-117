#!/bin/bash

SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"

# Set the python io encoding to UTF-8 by default if not set.
if [ -z ${PYTHONIOENCODING+x} ]; then export PYTHONIOENCODING=utf8; fi

export PYTHONPATH="${DIR}:${PYTHONPATH}"
unameOut="$(uname -s)"
case "${unameOut}" in
    Darwin*)    PYTHON_TOOL="python3";;
    *)          PYTHON_TOOL="python"
esac

BTEQ_TOOL=$(type -p bteq)

if [ -z "$BTEQ_TOOL" ];
then
  echo "WARNING: The bteq utility was not detected. You need the bteq utility installed in order to run the extraction scripts."
  case "${unameOut}" in
      Darwin*) echo "For MacOS you can download BTEQ tools from here: https://downloads.teradata.com/download/tools/teradata-tools-and-utilities-macos-installation-package";;
      *)  echo "For linux you can download BTEQ tools from here: https://downloads.teradata.com/download/tools/teradata-tools-and-utilities-linux-installation-package-0";;
  esac
fi
$PYTHON_TOOL -m teraexport.__main__ "$@"
