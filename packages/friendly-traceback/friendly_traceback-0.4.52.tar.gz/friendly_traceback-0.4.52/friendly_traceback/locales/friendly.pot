# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR ORGANIZATION
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-08-21 18:43-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=cp1252\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: pygettext.py 1.5\n"


#: __init__.py:186 __main__.py:169
msgid "The file {filename} does not exist."
msgstr ""

#: base_formatters.py:149 base_formatters.py:155
msgid "I have no suggestion to offer."
msgstr ""

#: base_formatters.py:153
msgid "I have no suggestion to offer; try `why()`."
msgstr ""

#: config.py:63 config.py:173 console_helpers.py:74
msgid "Nothing to show: no exception recorded."
msgstr ""

#: console_helpers.py:35
msgid "Nothing to go back to: no exception recorded."
msgstr ""

#: console_helpers.py:132 console_helpers.py:136
msgid "{exception} is not an exception."
msgstr ""

#: console_helpers.py:204
msgid ""
"Invalid argument for `www()`.\n"
"Valid arguments include `None` or one of `{sites}`.\n"
msgstr ""

#: console_helpers.py:228
msgid "The default web browser cannot be used for searching."
msgstr ""

#: console_helpers.py:415
msgid "The following methods of the Friendly object should also be available as functions."
msgstr ""

#: core.py:439
msgid "More lines not shown."
msgstr ""

#: core.py:440 core.py:480
msgid "Python exception:"
msgstr ""

#: core.py:493
msgid ""
"Warning: improperly formed exception.\n"
"I suspect that a custom exception has been raised\n"
"with a non-string value used as a message.\n"
"This can occur if a `__repr__` or a `__str__` method\n"
"raises an exception or does not return a string.\n"
msgstr ""

#: core.py:555
msgid ""
"The encoding of the file was not valid.\n"
msgstr ""

#: core.py:627
msgid ""
"{filename} is not a regular Python file whose contents can be analyzed.\n"
msgstr ""

#: core.py:632
msgid ""
"Exception raised on line {linenumber} of code block {filename}.\n"
msgstr ""

#: core.py:636
msgid ""
"Exception raised on line {linenumber} of file {filename}.\n"
msgstr ""

#: core.py:669
msgid ""
"Execution stopped on line {linenumber} of code block {filename}.\n"
msgstr ""

#: core.py:673
msgid ""
"Execution stopped on line {linenumber} of file {filename}.\n"
msgstr ""

#: core.py:692
msgid ""
"`{filename}` is not a regular Python file whose contents\n"
"can be analyzed.\n"
msgstr ""

#: core.py:705
msgid ""
"Python could not understand the code in the code block {filename}\n"
msgstr ""

#: core.py:709
msgid ""
"Python could not understand the code in the file\n"
"'{filename}'\n"
msgstr ""

#: core.py:714
msgid ""
"at the location indicated by ^.\n"
msgstr ""

#: core.py:945
msgid ""
"Unfortunately, no additional information is available:\n"
"the content of file '<stdin>' is not accessible.\n"
"Are you using a regular Python console instead of a Friendly-console?\n"
"Perhaps try: `start_console(local_vars=locals())`.\n"
msgstr ""

#: frame_info.py:31
msgid ""
"Problem: source of `{filename}` is not available\n"
msgstr ""

#: ft_console.py:28
msgid "Type 'Friendly' for help on special functions/methods."
msgstr ""

#: ft_gettext.py:88
msgid ""
"Please report this example to\n"
"https://github.com/friendly-traceback/friendly-traceback/issues/new\n"
"If you are using a REPL, use `www('bug')` to do so.\n"
"\n"
msgstr ""

#: ft_gettext.py:97
msgid ""
"Friendly-traceback does not know the cause of this error.\n"
msgstr ""

#: ft_gettext.py:104
msgid ""
"No information is known about this exception.\n"
msgstr ""

#: ft_gettext.py:106
msgid ""
"If you are using the Friendly console, use `www()` to\n"
"do an Internet search for this particular case.\n"
msgstr ""

#: ft_gettext.py:116
msgid ""
"Internal error for Friendly.\n"
msgstr ""

#: functions_help.py:10
msgid "Removes the last recorded traceback item."
msgstr ""

#: functions_help.py:11
msgid "Shows all the information about the last traceback."
msgstr ""

#: functions_help.py:12
msgid "Shows a list of recorded traceback messages."
msgstr ""

#: functions_help.py:13
msgid "Sets the language to be used."
msgstr ""

#: functions_help.py:14
msgid "Sets the prompt style to be used in the console."
msgstr ""

#: functions_help.py:15
msgid "Shows the paths corresponding to synonyms used."
msgstr ""

#: functions_help.py:16
msgid "Shows the generic meaning of a given exception"
msgstr ""

#: functions_help.py:17
msgid "Shows where an exception was raised."
msgstr ""

#: functions_help.py:18
msgid "Shows the likely cause of the exception."
msgstr ""

#: functions_help.py:19
msgid "Opens a web browser at a useful location."
msgstr ""

#: functions_help.py:20
msgid "Suggestion sometimes added to a friendly traceback."
msgstr ""

#: functions_help.py:21
msgid "Shows a normal Python traceback."
msgstr ""

#: functions_help.py:22
msgid "Shows a simplified Python traceback."
msgstr ""

#: functions_help.py:23
msgid "Returns the current value used for items to include by default."
msgstr ""

#: functions_help.py:26
msgid "Sets the items to show by default when an exception is raised."
msgstr ""

#: functions_help.py:29
msgid "Returns the language currently used."
msgstr ""

#: functions_help.py:30
msgid "Sets the formatter to use for display."
msgstr ""

#: functions_help.py:31
msgid "Use True (default) or False to set the debug flag."
msgstr ""

#: info_generic.py:50
msgid ""
"`ArithmeticError` is the base class for those built-in exceptions\n"
"that are raised for various arithmetic errors.\n"
"It is unusual that you are seeing this exception;\n"
"normally, a more specific exception should have been raised.\n"
msgstr ""

#: info_generic.py:61
msgid ""
"In Python, the keyword `assert` is used in statements of the form\n"
"`assert condition`, to confirm that `condition` is not `False`,\n"
"nor equivalent to `False` such as an empty list, etc.\n"
"\n"
"If `condition` is `False` or equivalent, an `AssertionError` is raised.\n"
msgstr ""

#: info_generic.py:72
msgid ""
"An `AttributeError` occurs when the code contains something like\n"
"    `object.x`\n"
"and `x` is not a method or attribute (variable) belonging to `object`.\n"
msgstr ""

#: info_generic.py:82
msgid ""
"An `EOFError` is raised when the `input()` function hits\n"
"an end-of-file condition (EOF) without reading any data.\n"
msgstr ""

#: info_generic.py:91
msgid ""
"A `FileNotFoundError` exception indicates that you\n"
"are trying to open a file that cannot be found by Python.\n"
"This could be because you misspelled the name of the file.\n"
msgstr ""

#: info_generic.py:101
msgid ""
"An `ImportError` exception indicates that a certain object could not\n"
"be imported from a module or package. Most often, this is\n"
"because the name of the object is not spelled correctly.\n"
msgstr ""

#: info_generic.py:111
msgid ""
"An `IndentationError` occurs when a given line of code is\n"
"not indented (aligned vertically with other lines) as expected.\n"
msgstr ""

#: info_generic.py:120
msgid ""
"An `IndexError` occurs when you try to get an item from a list,\n"
"a tuple, or a similar object (sequence), and use an index which\n"
"does not exist; typically, this happens because the index you give\n"
"is greater than the length of the sequence.\n"
msgstr ""

#: info_generic.py:131
msgid ""
"A `KeyError` is raised when a value is not found as a\n"
"key in a Python dict or in a similar object.\n"
msgstr ""

#: info_generic.py:140
msgid ""
"`LookupError` is the base class for the exceptions that are raised\n"
"when a key or index used on a mapping or sequence is invalid.\n"
"It can also be raised directly by codecs.lookup().\n"
msgstr ""

#: info_generic.py:150
msgid ""
"Like the name indicates, a `MemoryError` occurs when Python\n"
"runs out of memory. This can happen if you create an object\n"
"that is too big, like a list with too many items.\n"
msgstr ""

#: info_generic.py:160
msgid ""
"A `ModuleNotFoundError` exception indicates that you\n"
"are trying to import a module that cannot be found by Python.\n"
"This could be because you misspelled the name of the module\n"
"or because it is not installed on your computer.\n"
msgstr ""

#: info_generic.py:171
msgid ""
"A `NameError` exception indicates that a variable or\n"
"function name is not known to Python.\n"
"Most often, this is because there is a spelling mistake.\n"
"However, sometimes it is because the name is used\n"
"before being defined or given a value.\n"
msgstr ""

#: info_generic.py:183
msgid ""
"An `OSError` exception is usually raised by the Operating System\n"
"to indicate that an operation is not allowed or that\n"
"a resource is not available.\n"
msgstr ""

#: info_generic.py:192
msgid ""
"An exception of type `{name}` is a subclass of `OSError`.\n"
msgstr ""

#: info_generic.py:201
msgid ""
"An `OverflowError` is raised when the result of an arithmetic operation\n"
"is too large to be handled by the computer's processor.\n"
msgstr ""

#: info_generic.py:210
msgid ""
"A `RecursionError` is raised when a function calls itself,\n"
"directly or indirectly, too many times.\n"
"It almost always indicates that you made an error in your code\n"
"and that your program would never stop.\n"
msgstr ""

#: info_generic.py:221
msgid ""
"`StopIteration` is raised to indicate that an iterator has no more\n"
"item to provide when its `__next__` method is called by\n"
"the `next()` builtin function.\n"
msgstr ""

#: info_generic.py:231
msgid ""
"A `SyntaxError` occurs when Python cannot understand your code.\n"
msgstr ""

#: info_generic.py:237
msgid ""
"A `TabError` indicates that you have used both spaces\n"
"and tab characters to indent your code.\n"
"This is not allowed in Python.\n"
"Indenting your code means to have block of codes aligned vertically\n"
"by inserting either spaces or tab characters at the beginning of lines.\n"
"Python's recommendation is to always use spaces to indent your code.\n"
msgstr ""

#: info_generic.py:250
msgid ""
"A `TypeError` is usually caused by trying\n"
"to combine two incompatible types of objects,\n"
"by calling a function with the wrong type of object,\n"
"or by trying to do an operation not allowed on a given type of object.\n"
msgstr ""

#: info_generic.py:261
msgid ""
"A `ValueError` indicates that a function or an operation\n"
"received an argument of the right type, but an inappropriate value.\n"
msgstr ""

#: info_generic.py:270
msgid ""
"In Python, variables that are used inside a function are known as \n"
"local variables. Before they are used, they must be assigned a value.\n"
"A variable that is used before it is assigned a value is assumed to\n"
"be defined outside that function; it is known as a `global`\n"
"(or sometimes `nonlocal`) variable. You cannot assign a value to such\n"
"a global variable inside a function without first indicating to\n"
"Python that this is a global variable, otherwise you will see\n"
"an `UnboundLocalError`.\n"
msgstr ""

#: info_generic.py:285
msgid ""
"No information is available about this warning.\n"
msgstr ""

#: info_generic.py:291
msgid ""
"A `ZeroDivisionError` occurs when you are attempting to divide a value\n"
"by zero either directly or by using some other mathematical operation.\n"
msgstr ""

#: info_variables.py:33
msgid "a complex number"
msgstr ""

#: info_variables.py:34
msgid "a dictionary (`dict`)"
msgstr ""

#: info_variables.py:35
msgid "a number (`float`)"
msgstr ""

#: info_variables.py:36
msgid "a `frozenset`"
msgstr ""

#: info_variables.py:37
msgid "an integer (`int`)"
msgstr ""

#: info_variables.py:38
msgid "a `list`"
msgstr ""

#: info_variables.py:39
msgid "a variable equal to `None` (`NoneType`)"
msgstr ""

#: info_variables.py:40
msgid "a `set`"
msgstr ""

#: info_variables.py:41 info_variables.py:42
msgid "a string (`str`)"
msgstr ""

#: info_variables.py:43
msgid "a `tuple`"
msgstr ""

#: info_variables.py:441
msgid ""
"A type hint found for `{name}` in the {scope} scope.\n"
"Perhaps you had used a colon instead of an equal sign and wrote\n"
"\n"
"    {name} : {hint}\n"
"\n"
"instead of\n"
"\n"
"    {name} = {hint}\n"
msgstr ""

#: path_info.py:203
msgid "The default directory is {dirname}."
msgstr ""

#: runtime_errors\attribute_error.py:32 runtime_errors\attribute_error.py:81
#: runtime_errors\attribute_error.py:119
msgid ""
"Did you give your program the same name as a Python module?\n"
msgstr ""

#: runtime_errors\attribute_error.py:33 runtime_errors\attribute_error.py:82
msgid ""
"I suspect that you used the name `{module}.py` for your program\n"
"and that you also wanted to import a module with the same name\n"
"from Python's standard library.\n"
"If so, you should use a different name for your program.\n"
msgstr ""

#: runtime_errors\attribute_error.py:42 runtime_errors\import_error.py:76
msgid ""
"You have a circular import.\n"
msgstr ""

#: runtime_errors\attribute_error.py:46 runtime_errors\attribute_error.py:90
msgid ""
"You likely have a circular import.\n"
msgstr ""

#: runtime_errors\attribute_error.py:47
msgid ""
"Python indicated that the module `{module}` was not fully imported.\n"
msgstr ""

#: runtime_errors\attribute_error.py:48 runtime_errors\attribute_error.py:91
msgid ""
"This can occur if, during the execution of the code in module `{module}`\n"
"an attempt is made to import the same module again.\n"
msgstr ""

#: runtime_errors\attribute_error.py:74
msgid ""
"This should not happen:\n"
"Python tells us that module `{module}` does not have an attribute named `{attribute}`.\n"
"However, it does not appear that module `{module}` was imported.\n"
msgstr ""

#: runtime_errors\attribute_error.py:100 runtime_errors\attribute_error.py:108
#: runtime_errors\attribute_error.py:141 runtime_errors\attribute_error.py:400
#: runtime_errors\import_error.py:119 runtime_errors\key_error.py:199
#: runtime_errors\key_error.py:206
#: runtime_errors\module_not_found_error.py:129
#: runtime_errors\name_error.py:87 runtime_errors\unbound_local_error.py:44
#: syntax_errors\message_analyzer.py:411
#: syntax_errors\message_analyzer.py:1136
#: syntax_errors\statement_analyzer.py:1252
msgid ""
"Did you mean `{name}`?\n"
msgstr ""

#: runtime_errors\attribute_error.py:101
msgid ""
"Perhaps you meant to write `{module}.{correct}` instead of `{module}.{typo}`\n"
msgstr ""

#: runtime_errors\attribute_error.py:109
msgid ""
"Instead of writing `{module}.{typo}`, perhaps you meant to write one of \n"
"the following names which are attributes of module `{module}`:\n"
"`{names}`\n"
msgstr ""

#: runtime_errors\attribute_error.py:120
msgid ""
"You imported a module named `{module}` from `{mod_path}`.\n"
"There is also a module named `{module}` in Python's standard library.\n"
"Perhaps you need to rename your module.\n"
msgstr ""

#: runtime_errors\attribute_error.py:142
msgid ""
"Perhaps you meant to use the attribute `{attribute}` of \n"
"module `{mod_name}` instead of module `{module}`.\n"
msgstr ""

#: runtime_errors\attribute_error.py:148
msgid "Did you mean one of the following modules: `{names}`?"
msgstr ""

#: runtime_errors\attribute_error.py:151
msgid ""
"Instead of the module `{module}`, perhaps you wanted to use\n"
"the attribute `{attribute}` of one of the following modules:\n"
"`{names}`.\n"
msgstr ""

#: runtime_errors\attribute_error.py:160
msgid ""
"Python tells us that no object with name `{attribute}` is\n"
"found in module `{module}`.\n"
msgstr ""

#: runtime_errors\attribute_error.py:192
msgid ""
"You are attempting to access the attribute `{attr}`\n"
"for a variable whose value is `None`."
msgstr ""

#: runtime_errors\attribute_error.py:216
msgid ""
"The value of attribute `{attribute}` of objects of type `{obj_type}`\n"
"cannot be changed.\n"
"I have no further information.\n"
msgstr ""

#: runtime_errors\attribute_error.py:234
msgid ""
"Object `{name}` uses an empty `__slots__` to prevent the modification\n"
"of any of its attributes.\n"
msgstr ""

#: runtime_errors\attribute_error.py:240
msgid ""
"Object `{name}` uses `__slots__` to specify which attributes can\n"
"be changed. The value of attribute `{name}.{attribute}` cannot be changed.\n"
msgstr ""

#: runtime_errors\attribute_error.py:266
msgid ""
"`{obj_name}` is a function. Perhaps you meant to write\n"
"`{obj_name}({attribute})`\n"
msgstr ""

#: runtime_errors\attribute_error.py:270
msgid ""
"Did you mean `{obj_name}({attribute})`?\n"
msgstr ""

#: runtime_errors\attribute_error.py:275
msgid ""
"`{obj_name}` is a Python built-in function or method\n"
"which does not have an attribute named `{attribute}.`\n"
msgstr ""

#: runtime_errors\attribute_error.py:294
msgid ""
"An object of type `{obj_type}` has no attribute named `{attr}`.\n"
"Unfortunately I cannot find such an object on the line where\n"
"the problem occurs.\n"
msgstr ""

#: runtime_errors\attribute_error.py:322
msgid ""
"An object of type `{obj_type}` has no attribute named `{attr}`.\n"
"\n"
"I cannot give additional information:\n"
"I found one object of this type in the current scope\n"
"but it does not appear to be the object causing the problem.\n"
msgstr ""

#: runtime_errors\attribute_error.py:331
msgid ""
"An object of type `{obj_type}` has no attribute named `{attr}`.\n"
"\n"
"The following objects might be the cause of the problem: \n"
"{names}.\n"
msgstr ""

#: runtime_errors\attribute_error.py:371
msgid ""
"The object `{obj}` has no attribute named `{attr}`.\n"
msgstr ""

#: runtime_errors\attribute_error.py:375
msgid ""
"Note that object `{obj}` uses `__slots__` which prevents\n"
"the creation of new attributes.\n"
msgstr ""

#: runtime_errors\attribute_error.py:383
msgid ""
"The following are some of its known attributes:\n"
"`{names}`."
msgstr ""

#: runtime_errors\attribute_error.py:396
msgid ""
"The object `{obj_name}` has no attribute named `{attribute}`.\n"
msgstr ""

#: runtime_errors\attribute_error.py:401
msgid ""
"Perhaps you meant to write `{obj}.{correct}` instead of `{obj}.{typo}`\n"
msgstr ""

#: runtime_errors\attribute_error.py:407 runtime_errors\import_error.py:126
msgid ""
"Did you mean one of the following: `{names}`?\n"
msgstr ""

#: runtime_errors\attribute_error.py:408
msgid ""
"Instead of writing `{obj}.{typo}`, perhaps you meant to write one of \n"
"the following names which are attributes of object `{obj}`:\n"
"`{names}`\n"
msgstr ""

#: runtime_errors\attribute_error.py:433
#: syntax_errors\message_analyzer.py:1588
#: syntax_errors\message_analyzer.py:1603
msgid ""
"Did you write a comma by mistake?\n"
msgstr ""

#: runtime_errors\attribute_error.py:434
msgid ""
"`{obj_name}` is a tuple that contains a single item\n"
"which does have `'{attribute}'` as an attribute.\n"
"Perhaps you added a trailing comma by mistake at the end of the line\n"
"where you defined `{obj_name}`.\n"
msgstr ""

#: runtime_errors\attribute_error.py:448
msgid ""
"Did you mean `{str_content}.join({obj_name})`?\n"
msgstr ""

#: runtime_errors\attribute_error.py:449
msgid ""
"The object `{obj_name}` has no attribute named `join`.\n"
"Perhaps you wanted something like `{str_content}.join({obj_name})`.\n"
msgstr ""

#: runtime_errors\attribute_error.py:473
msgid ""
"Did you mean `{known_builtin}({obj_name})`?\n"
msgstr ""

#: runtime_errors\attribute_error.py:476
msgid ""
"The object `{obj_name}` has no attribute named `{attribute}`.\n"
"Perhaps you can use the Python builtin function `{known_builtin}` instead:\n"
"`{known_builtin}({obj_name})`."
msgstr ""

#: runtime_errors\attribute_error.py:507
msgid ""
"Did you mean `{attr}`?\n"
msgstr ""

#: runtime_errors\attribute_error.py:508
msgid ""
"The object `{name}` has no attribute named `{attribute}`.\n"
msgstr ""

#: runtime_errors\attribute_error.py:512
msgid ""
"However, `{attr}` is an attribute of `{name}` with a similar meaning.\n"
msgstr ""

#: runtime_errors\attribute_error.py:516
msgid ""
"However, `{name}` has the following attributes with similar meanings:\n"
"`{attributes}`.\n"
msgstr ""

#: runtime_errors\attribute_error.py:527
msgid ""
"Did you mean to separate object names by a comma?\n"
msgstr ""

#: runtime_errors\attribute_error.py:529
msgid ""
"`{second}` is not an attribute of `{first}`.\n"
"However, both `{first}` and `{second}` are known objects.\n"
"Perhaps you wrote a period to separate these two objects, \n"
"instead of using a comma.\n"
msgstr ""

#: runtime_errors\file_not_found_error.py:25
#: runtime_errors\file_not_found_error.py:39
msgid ""
"In your program, the name of the\n"
"file that cannot be found is `{filename}`.\n"
msgstr ""

#: runtime_errors\file_not_found_error.py:33
msgid ""
"{directory}\n"
"is not a valid directory.\n"
msgstr ""

#: runtime_errors\file_not_found_error.py:44
msgid ""
"It was expected to be found in the\n"
"`{directory}` directory.\n"
msgstr ""

#: runtime_errors\file_not_found_error.py:48
msgid ""
"Did you mean `{similar}`?\n"
msgstr ""

#: runtime_errors\file_not_found_error.py:50
msgid ""
"The file `{similar}` has a similar name.\n"
msgstr ""

#: runtime_errors\file_not_found_error.py:55
msgid ""
"Perhaps you meant one of the following files with similar names:\n"
msgstr ""

#: runtime_errors\file_not_found_error.py:62 runtime_errors\name_error.py:102
msgid ""
"I have no additional information for you.\n"
msgstr ""

#: runtime_errors\import_error.py:79
msgid ""
"The object that could not be imported is `{name}`.\n"
"The module or package where it was \n"
"expected to be found is `{module}`.\n"
msgstr ""

#: runtime_errors\import_error.py:96
msgid ""
"Python indicated that you have a circular import.\n"
"This can occur if executing the code in module 'A'\n"
"results in executing the code in module 'B' where\n"
"an attempt to import a name from module 'A' is made\n"
"before the execution of the code in module 'A' had been completed.\n"
msgstr ""

#: runtime_errors\import_error.py:108
msgid ""
"Inconsistent state: `'{module}'` was apparently not imported.\n"
"As a result, no further analysis can be done.\n"
msgstr ""

#: runtime_errors\import_error.py:120
msgid ""
"Perhaps you meant to import `{correct}` (from `{module}`) instead of `{typo}`\n"
msgstr ""

#: runtime_errors\import_error.py:129
msgid ""
"Instead of trying to import `{typo}` from `{module}`, \n"
"perhaps you meant to import one of \n"
"the following names which are found in module `{module}`:\n"
"`{candidates}`\n"
msgstr ""

#: runtime_errors\import_error.py:148
msgid ""
"The object that could not be imported is `{name}`.\n"
msgstr ""

#: runtime_errors\import_error.py:202
msgid ""
"The problem was likely caused by what is known as a 'circular import'.\n"
"First, Python imported and started executing the code in file\n"
"   '{file}'.\n"
"which imports module `{last_module}`.\n"
"During this process, the code in another file,\n"
"   '{last_file}'\n"
"was executed. However in this last file, an attempt was made\n"
"to import the original module `{last_module}`\n"
"a second time, before Python had completed the first import.\n"
msgstr ""

#: runtime_errors\index_error.py:58
msgid ""
"You have tried to get an item from `{name}`,\n"
"{obj_type} of length `{length}`, by using a value for the index\n"
"that I cannot determine but which is not allowed.\n"
msgstr ""

#: runtime_errors\index_error.py:67
msgid ""
"You have tried to get the item with index `{index}` of `{name}`,\n"
"{obj_type} of length `{length}`.\n"
msgstr ""

#: runtime_errors\index_error.py:78
msgid ""
"The valid index values of `{name}` are integers ranging from\n"
"`{min}` to `{max}`.\n"
msgstr ""

#: runtime_errors\index_error.py:83
msgid ""
"Remember: the first item of {obj_type} is not at index 1 but at index 0.\n"
msgstr ""

#: runtime_errors\index_error.py:88
msgid ""
"`{name}` contains no item.\n"
msgstr ""

#: runtime_errors\index_error.py:89
msgid ""
"You have tried to get the item with index `{index}` of `{name}`,\n"
"{obj_type} which contains no item.\n"
msgstr ""

#: runtime_errors\key_error.py:25
msgid ""
"You tried to retrieve an item from an empty `dict`\n"
"or a similar object which I cannot identify.\n"
msgstr ""

#: runtime_errors\key_error.py:31
msgid ""
"`{name}` is an empty `dict`.\n"
msgstr ""

#: runtime_errors\key_error.py:32
msgid ""
"You tried to retrieve an item from `{name}` which is an empty `dict`.\n"
msgstr ""

#: runtime_errors\key_error.py:56
msgid ""
"You tried to retrieve an item from an empty ChainMap\n"
"or similar object which I cannot identify.\n"
msgstr ""

#: runtime_errors\key_error.py:62
msgid ""
"`{name}` is an empty `ChainMap`.\n"
msgstr ""

#: runtime_errors\key_error.py:63
msgid ""
"You tried to retrieve an item from `{name}` which is an empty `ChainMap`.\n"
msgstr ""

#: runtime_errors\key_error.py:106
msgid ""
"Missing key `{key}` in a `ChainMap` or in a similar object.\n"
msgstr ""

#: runtime_errors\key_error.py:151
msgid ""
"A `dict` or a similar object which I cannot identify\n"
"does not have `{key}` as a key.\n"
msgstr ""

#: runtime_errors\key_error.py:158
msgid ""
"The key `{key}` cannot be found in the dict `{name}`.\n"
msgstr ""

#: runtime_errors\key_error.py:163
msgid ""
"The key `{key}` cannot be found in `{name}`, an object of type `{obj_type}`.\n"
msgstr ""

#: runtime_errors\key_error.py:173
msgid ""
"`{name}` contains a string key which is identical to `str({key})`.\n"
"Perhaps you forgot to convert the key into a string.\n"
msgstr ""

#: runtime_errors\key_error.py:177
msgid ""
"Did you forget to convert `{key}` into a string?\n"
msgstr ""

#: runtime_errors\key_error.py:187
msgid ""
"`{key}` is a string.\n"
"There is a key of `{name}` whose string representation\n"
"is identical to `{key}`.\n"
msgstr ""

#: runtime_errors\key_error.py:192
msgid ""
"Did you convert `{key}` into a string by mistake?\n"
msgstr ""

#: runtime_errors\key_error.py:200
msgid ""
"`{name}` is a key of `{dict_}` which is similar to `{key}`.\n"
msgstr ""

#: runtime_errors\key_error.py:208
msgid ""
"`{name}` has some keys similar to `{key}` including:\n"
"`{names}`.\n"
msgstr ""

#: runtime_errors\module_not_found_error.py:37
msgid ""
"No additional information available since `{name}` cannot be imported.\n"
msgstr ""

#: runtime_errors\module_not_found_error.py:48
msgid ""
"Did you mean `from {name} import {rest}`?\n"
msgstr ""

#: runtime_errors\module_not_found_error.py:51
msgid ""
"`{rest}` is not a separate module but an object that is part of `{name}`.\n"
msgstr ""

#: runtime_errors\module_not_found_error.py:61
msgid ""
"Did you mean `import {name}.{attr}`?\n"
msgstr ""

#: runtime_errors\module_not_found_error.py:64
msgid ""
"Perhaps you meant `import {name}.{attr}`.\n"
"`{attr}` is a name similar to `{rest}` and is a module that\n"
"can be imported from `{name}`.\n"
msgstr ""

#: runtime_errors\module_not_found_error.py:72
msgid ""
"Did you mean `from {name} import {attr}`?\n"
msgstr ""

#: runtime_errors\module_not_found_error.py:75
msgid ""
"Perhaps you meant `from {name} import {attr}`.\n"
"`{attr}` is a name similar to `{rest}` and is an object that\n"
"can be imported from `{name}`.\n"
msgstr ""

#: runtime_errors\module_not_found_error.py:82
msgid ""
"Other objects with similar names that are part of\n"
" `{name}` include `{others}`.\n"
msgstr ""

#: runtime_errors\module_not_found_error.py:88
msgid ""
"`{rest}` cannot be imported from `{name}`.\n"
msgstr ""

#: runtime_errors\module_not_found_error.py:98
msgid ""
"The curses module is rarely installed with Python on Windows.\n"
msgstr ""

#: runtime_errors\module_not_found_error.py:100
msgid ""
"The curses module is often not installed with Python.\n"
msgstr ""

#: runtime_errors\module_not_found_error.py:101
msgid ""
"You have tried to import the curses module.\n"
msgstr ""

#: runtime_errors\module_not_found_error.py:122
msgid ""
"No module named `{name}` can be imported.\n"
"Perhaps you need to install it.\n"
msgstr ""

#: runtime_errors\module_not_found_error.py:131
msgid ""
"The following existing modules have names that are similar \n"
"to the module you tried to import: `{names}`\n"
msgstr ""

#: runtime_errors\module_not_found_error.py:136
msgid ""
"`{name}` is an existing module that has a similar name.\n"
msgstr ""

#: runtime_errors\name_error.py:15
msgid "You are already using Python!"
msgstr ""

#: runtime_errors\name_error.py:40
msgid ""
"In your program, `{var_name}` is an unknown name\n"
"that exists in an enclosing scope,\n"
"but has not yet been assigned a value.\n"
msgstr ""

#: runtime_errors\name_error.py:59
msgid ""
"In your program, no object with the name `{var_name}` exists.\n"
msgstr ""

#: runtime_errors\name_error.py:77
msgid ""
"Did you mean `1j`?\n"
msgstr ""

#: runtime_errors\name_error.py:78
msgid ""
"However, sometimes `{name}` is intended to represent\n"
"the square root of `-1` which is written as `1j` in Python.\n"
msgstr ""

#: runtime_errors\name_error.py:89
msgid ""
"Did you use a colon instead of an equal sign?\n"
msgstr ""

#: runtime_errors\name_error.py:113
msgid ""
"You must be a fan of PyConAu!\n"
msgstr ""

#: runtime_errors\name_error.py:114
msgid ""
"I am guessing that you tried to use (one of) the flipfloperators\n"
"shown during the second Lightning Talk session of PyConAu 2018,\n"
"but that you forgot to install the module from PyPI.\n"
"\n"
"#### Note that it is still a bad idea.\n"
msgstr ""

#: runtime_errors\name_error.py:133
msgid ""
"Did you forget to import `{name}`?\n"
msgstr ""

#: runtime_errors\name_error.py:134
msgid ""
"The name `{name}` is not defined in your program.\n"
"Perhaps you forgot to import `{lowercase}` which is found\n"
"in Python's standard library.\n"
msgstr ""

#: runtime_errors\name_error.py:140
msgid ""
"Note that the name of the module is `{lowercase}` and not `{name}`.\n"
msgstr ""

#: runtime_errors\name_error.py:157
msgid ""
"The similar name `{name}` was found in the local scope.\n"
msgstr ""

#: runtime_errors\name_error.py:158
msgid ""
"The similar name `{name}` was found in the global scope.\n"
msgstr ""

#: runtime_errors\name_error.py:160
msgid ""
"The Python builtin `{name}` has a similar name.\n"
msgstr ""

#: runtime_errors\name_error.py:169 runtime_errors\unbound_local_error.py:97
msgid ""
"Instead of writing `{name}`, perhaps you meant one of the following:\n"
msgstr ""

#: runtime_errors\name_error.py:174 runtime_errors\unbound_local_error.py:101
msgid "*   Local scope: "
msgstr ""

#: runtime_errors\name_error.py:175
msgid "*   Global scope: "
msgstr ""

#: runtime_errors\name_error.py:176
msgid "*   Python builtins: "
msgstr ""

#: runtime_errors\name_error.py:234
msgid ""
"Did you write `self` at the wrong place?\n"
msgstr ""

#: runtime_errors\name_error.py:235
msgid ""
"The {scope} object `{obj}`\n"
"has an attribute named `{unknown_name}`.\n"
"Perhaps you should have written `self.{unknown_name}(...`\n"
"instead of `{unknown_name}(self, ...`.\n"
msgstr ""

#: runtime_errors\name_error.py:242
msgid ""
"Did you forget to add `self.`?\n"
msgstr ""

#: runtime_errors\name_error.py:243
msgid ""
"A {scope} object, `{obj}`,\n"
"has an attribute named `{unknown_name}`.\n"
"Perhaps you should have written `self.{unknown_name}`\n"
"instead of `{unknown_name}`.\n"
msgstr ""

#: runtime_errors\name_error.py:250
msgid ""
"Did you forget to add `{name}.`?\n"
msgstr ""

#: runtime_errors\name_error.py:253
msgid ""
"The {scope} object `{name}`\n"
"has an attribute named `{unknown_name}`.\n"
"Perhaps you should have written `{name}.{unknown_name}`\n"
"instead of `{unknown_name}`.\n"
msgstr ""

#: runtime_errors\os_error.py:23
msgid ""
"I suspect that you are trying to connect to a server and\n"
"that a connection cannot be made.\n"
"\n"
"If that is the case, check for typos in the URL\n"
"and check your internet connectivity.\n"
msgstr ""

#: runtime_errors\os_error.py:43 syntax_errors\message_analyzer.py:1484
msgid ""
"Perhaps you need to double the backslash characters.\n"
msgstr ""

#: runtime_errors\os_error.py:44
msgid ""
"I suspect that you wrote a filename or path that contains\n"
"at least one backslash character, `\\`.\n"
"Python likely interpreted this as indicating the beginning of\n"
"what is known as an escape sequence.\n"
"To solve the problem, either write a so-called 'raw string'\n"
"by adding the letter `r` as a prefix in\n"
"front of the filename or path, or replace all single backslash\n"
"characters, `\\`, by double ones: `\\\\`.\n"
msgstr ""

#: runtime_errors\type_error.py:53
msgid ""
"Did you forget to convert the string `{name}` into {number_type}?\n"
msgstr ""

#: runtime_errors\type_error.py:58
msgid ""
"Perhaps you forgot to convert the string `{name}` into {number_type}.\n"
msgstr ""

#: runtime_errors\type_error.py:80 runtime_errors\type_error.py:106
msgid ""
"You tried to concatenate (add) two different types of objects:\n"
"{first} and {second}.\n"
msgstr ""

#: runtime_errors\type_error.py:138
msgid ""
"You tried to add two incompatible types of objects:\n"
"{first} and {second}.\n"
msgstr ""

#: runtime_errors\type_error.py:146
msgid ""
"You tried to subtract two incompatible types of objects:\n"
"{first} and {second}.\n"
msgstr ""

#: runtime_errors\type_error.py:154
msgid ""
"You tried to multiply two incompatible types of objects:\n"
"{first} and {second}.\n"
msgstr ""

#: runtime_errors\type_error.py:162
msgid ""
"You tried to divide two incompatible types of objects:\n"
"{first} and {second}.\n"
msgstr ""

#: runtime_errors\type_error.py:170
msgid ""
"You tried to perform the bitwise operation {operator}\n"
"on two incompatible types of objects:\n"
"{first} and {second}.\n"
msgstr ""

#: runtime_errors\type_error.py:185 runtime_errors\type_error.py:758
#: runtime_errors\type_error.py:867 syntax_errors\statement_analyzer.py:1125
#: syntax_errors\statement_analyzer.py:1370
msgid ""
"Did you mean `{line}`?\n"
msgstr ""

#: runtime_errors\type_error.py:186
msgid ""
"Outside of Python, `^` is often used to indicate exponentiation.\n"
msgstr ""

#: runtime_errors\type_error.py:189 runtime_errors\type_error.py:761
msgid ""
"Perhaps you meant `{line}`.\n"
msgstr ""

#: runtime_errors\type_error.py:192
msgid ""
"You tried to perform the bit shifting operation {operator}\n"
"on two incompatible types of objects:\n"
"{first} and {second}.\n"
msgstr ""

#: runtime_errors\type_error.py:202
msgid ""
"You tried to exponentiate (raise to a power)\n"
"using two incompatible types of objects:\n"
"{first} and {second}.\n"
msgstr ""

#: runtime_errors\type_error.py:211
msgid ""
"You tried to use the operator {operator}\n"
"using two incompatible types of objects:\n"
"{first} and {second}.\n"
"This operator is normally used only\n"
"for multiplication of matrices.\n"
msgstr ""

#: runtime_errors\type_error.py:248
msgid ""
"Complex numbers cannot be ordered.\n"
msgstr ""

#: runtime_errors\type_error.py:249
msgid ""
"You tried to do an order comparison ({operator})\n"
"between two complex numbers.\n"
msgstr ""

#: runtime_errors\type_error.py:255
msgid ""
"You tried to do an order comparison ({operator})\n"
"between two incompatible types of objects:\n"
"{first} and {second}.\n"
msgstr ""

#: runtime_errors\type_error.py:305
msgid "Perhaps you meant to write `{operator}=` instead of `={operator}`"
msgstr ""

#: runtime_errors\type_error.py:309
msgid ""
"You tried to use the unary operator '{operator}'\n"
"with the following type of object: {obj}.\n"
"This operation is not defined for this type of object.\n"
msgstr ""

#: runtime_errors\type_error.py:336
msgid ""
"In Python, some objects are known as immutable:\n"
"once defined, their value cannot be changed.\n"
"You tried change part of such an immutable object: {obj},\n"
"most likely by using an indexing operation.\n"
msgstr ""

#: runtime_errors\type_error.py:343
msgid ""
"Did you mean to use a list?\n"
msgstr ""

#: runtime_errors\type_error.py:344
msgid ""
"Perhaps you meant to use a list instead.\n"
msgstr ""

#: runtime_errors\type_error.py:359
msgid ""
"In Python 3, exceptions must be derived from BaseException.\n"
msgstr ""

#: runtime_errors\type_error.py:396
msgid ""
"You apparently have called the function `{fn_name}` with\n"
"{nb_given} positional argument(s) while it requires {nb_required}\n"
"such positional argument(s).\n"
msgstr ""

#: runtime_errors\type_error.py:402
msgid ""
"Perhaps you forgot `self` when defining `{fn_name}`.\n"
msgstr ""

#: runtime_errors\type_error.py:425
msgid ""
"You apparently have called the function '{fn_name}' with\n"
"fewer positional arguments than it requires ({nb_required} missing).\n"
msgstr ""

#: runtime_errors\type_error.py:444 runtime_errors\type_error.py:841
msgid ""
"\n"
"Note: `NoneType` means that the object has a value of `None`.\n"
msgstr ""

#: runtime_errors\type_error.py:451
msgid ""
"Python indicates that you have an object of type `{obj_type}`,\n"
"followed by something surrounded by parentheses, `(...)`,\n"
"which Python took as an indication of a function call.\n"
"Either the object of type `{obj_type}` was meant to be a function,\n"
"or you forgot a comma before `(...)`.\n"
msgstr ""

#: runtime_errors\type_error.py:473
msgid ""
"The parenthesis `()` following `{obj_name}` are interpreted\n"
"by Python as a function call for `{obj_name}`.\n"
"However, `{obj_name}` is not a function but an object of type `{obj_type}`.\n"
msgstr ""

#: runtime_errors\type_error.py:480
msgid ""
"Because of the surrounding parenthesis, `{fn_call}` \n"
"is interpreted by Python as indicating a function call for \n"
"`{obj_name}`, which is an object of type `{obj_type}`\n"
"which cannot be called.\n"
"\n"
msgstr ""

#: runtime_errors\type_error.py:493
msgid ""
"However, `{fn_call}` is a `tuple`.\n"
"Either the object `{obj_name}` was meant to be a function\n"
"or you have a missing comma between the object `{obj_name}`\n"
"and the tuple `{fn_call}` and meant to write\n"
"`{obj_name}, {fn_call}`.\n"
msgstr ""

#: runtime_errors\type_error.py:500
msgid ""
"Did you forget a comma between `{obj_name}` and `{fn_call}`?\n"
msgstr ""

#: runtime_errors\type_error.py:506
msgid ""
"However, `{obj_name}` is a sequence.\n"
"Perhaps you meant to use `[]` instead of `()` and write\n"
"`{obj_name}[{slice}]`\n"
msgstr ""

#: runtime_errors\type_error.py:511
msgid ""
"Did you mean `{obj_name}[{slice}]`?\n"
msgstr ""

#: runtime_errors\type_error.py:522
msgid ""
"However, both `{obj_name}` and `{fn_call}` are numbers.\n"
"Perhaps you forgot a multiplication operator, `*`,\n"
"and meant to write `{obj_name} * {fn_call}`\n"
"."
msgstr ""

#: runtime_errors\type_error.py:527
msgid ""
"Did you mean `{obj_name} * {fn_call}`?\n"
msgstr ""

#: runtime_errors\type_error.py:540
msgid ""
"Did you forget to convert `{name}` into an integer?\n"
msgstr ""

#: runtime_errors\type_error.py:541
msgid ""
"Perhaps you forgot to convert `{name}` into an integer.\n"
msgstr ""

#: runtime_errors\type_error.py:556
msgid ""
"You can only multiply sequences, such as list, tuples,\n"
" strings, etc., by integers.\n"
msgstr ""

#: runtime_errors\type_error.py:578
msgid ""
"Did you forget to convert `{name1}` and `{name2}` into integers?\n"
msgstr ""

#: runtime_errors\type_error.py:581
msgid ""
"Perhaps you forgot to convert `{name1}` and `{name2}` into integers.\n"
msgstr ""

#: runtime_errors\type_error.py:617
msgid ""
"You wrote an object whose value is `None` where an integer was expected.\n"
msgstr ""

#: runtime_errors\type_error.py:627
msgid ""
"You wrote an object of type `{obj}` where an integer was expected.\n"
msgstr ""

#: runtime_errors\type_error.py:637
msgid ""
"Did you forget to convert `{names}` into integers?\n"
msgstr ""

#: runtime_errors\type_error.py:640
msgid "Perhaps you forgot to convert `{names}` into integers."
msgstr ""

#: runtime_errors\type_error.py:663
msgid ""
"In the expression `{line}`\n"
"what is included between the square brackets, `[...]`,\n"
"must be either an integer or a slice\n"
"(`start:stop` or `start:stop:step`) \n"
"and you have used {obj_type} instead.\n"
msgstr ""

#: runtime_errors\type_error.py:674
msgid ""
"Note: sometimes this exception is raised because what Python\n"
"interprets as indices was meant to be a separate list, and a comma\n"
"should have been written before the opening `[` of that list.\n"
msgstr ""

#: runtime_errors\type_error.py:679 syntax_errors\statement_analyzer.py:1033
#: syntax_errors\statement_analyzer.py:1366
msgid ""
"Did you forget a comma?\n"
msgstr ""

#: runtime_errors\type_error.py:713
msgid ""
"Perhaps you have forgotten a comma between two identical lists\n"
"`{container}`. The second list had been interpreted as\n"
"the indexation of the first one by the index `{new_index}`\n"
msgstr ""

#: runtime_errors\type_error.py:719
msgid ""
"Perhaps you have forgotten a comma between the object `{container}`\n"
"and the list `{index}`.  The list `{index}` had been interpreted as\n"
"the indexation of object `{container}` by the index `{new_index}`\n"
msgstr ""

#: runtime_errors\type_error.py:724
msgid ""
"Did you forget a comma before `{index}`?\n"
msgstr ""

#: runtime_errors\type_error.py:789
msgid ""
"When using a slice to extract a range of elements\n"
"from a sequence, that is something like\n"
"`[start:stop]` or `[start:stop:step]`\n"
"each of `start`, `stop`, `step` must be either an integer, `None`,\n"
"or possibly some other object having an `__index__` method.\n"
msgstr ""

#: runtime_errors\type_error.py:809
msgid ""
"Only hashable objects can be used\n"
"as elements of `set` or keys of `dict`.\n"
"Hashable objects are objects that do not change value\n"
"once they have been created."
msgstr ""

#: runtime_errors\type_error.py:819
msgid ""
"Instead of using {original}, consider using {replacement}.\n"
msgstr ""

#: runtime_errors\type_error.py:847
msgid ""
"Subscriptable objects are typically containers from which\n"
"you can retrieve item using the notation `[...]`.\n"
msgstr ""

#: runtime_errors\type_error.py:859
msgid ""
"Using this notation, you attempted to retrieve an item\n"
"from an object of type `{obj_type}` which is not allowed.\n"
msgstr ""

#: runtime_errors\type_error.py:868
msgid ""
"Perhaps you meant to write `{line}`.\n"
msgstr ""

#: runtime_errors\type_error.py:871
msgid ""
"Using this notation, you attempted to retrieve an item\n"
"from `{name}`, an object of type `{obj_type}`. This is not allowed.\n"
msgstr ""

#: runtime_errors\type_error.py:889
msgid ""
"An iterable is an object capable of returning its members one at a time.\n"
"Python containers (`list, tuple, dict`, etc.) are iterables.\n"
"An iterable is required here.\n"
msgstr ""

#: runtime_errors\type_error.py:907 runtime_errors\value_error.py:23
msgid ""
"Unpacking is a convenient way to assign a name,\n"
"to each item of an iterable.\n"
msgstr ""

#: runtime_errors\type_error.py:911
msgid ""
"An iterable is an object capable of returning its members one at a time.\n"
"Python containers (`list, tuple, dict`, etc.) are iterables,\n"
"but not objects of type `{obj_type}`.\n"
msgstr ""

#: runtime_errors\type_error.py:927
msgid ""
"{function} does not accept a sequence as an argument.\n"
"Instead of writing `{line}`\n"
"perhaps you should use the `dict.fromkeys()` method: `{new_line}`.\n"
msgstr ""

#: runtime_errors\type_error.py:932
msgid ""
"Perhaps you need to use the `dict.fromkeys()` method.\n"
msgstr ""

#: runtime_errors\type_error.py:971 runtime_errors\type_error.py:996
msgid ""
"Did you forget to call `{name}`?\n"
msgstr ""

#: runtime_errors\type_error.py:972 runtime_errors\type_error.py:997
msgid ""
"I suspect that you forgot to add parentheses to call `{name}`.\n"
"You might have meant to write:\n"
"`{line}`\n"
msgstr ""

#: runtime_errors\type_error.py:1012
msgid ""
"The function `vars` is used to list the content of the\n"
"`__dict__` attribute of an object.\n"
msgstr ""

#: runtime_errors\type_error.py:1021
msgid ""
"Object `{name}` uses `__slots__` instead of `__dict__`.\n"
msgstr ""

#: runtime_errors\type_error.py:1025
msgid ""
"`{name}`, the argument of `vars`, is an object without such an attribute.\n"
msgstr ""

#: runtime_errors\type_error.py:1048
msgid ""
"You have specified the value of argument `{argument}` more than once\n"
"when calling the function named `{function}`.\n"
msgstr ""

#: runtime_errors\type_error.py:1069
msgid ""
"This function has only one argument: `{arguments}`\n"
msgstr ""

#: runtime_errors\type_error.py:1073
msgid ""
"This function has the following arguments:\n"
"`{arguments}`\n"
msgstr ""

#: runtime_errors\unbound_local_error.py:49
msgid ""
"The name `{var_name}` exists in both the global and nonlocal scope.\n"
"This can be rather confusing and is not recommended.\n"
"Depending on which variable you wanted to refer to, you needed to add either\n"
"\n"
"    global {var_name}\n"
"\n"
"or\n"
"\n"
"    nonlocal {var_name}\n"
"\n"
"as the first line inside your function.\n"
msgstr ""

#: runtime_errors\unbound_local_error.py:58
msgid ""
"Did you forget to add either `global {var_name}` or \n"
"`nonlocal {var_name}`?\n"
msgstr ""

#: runtime_errors\unbound_local_error.py:74
msgid ""
"The name `{var_name}` exists in the {scope} scope.\n"
"Perhaps the statement\n"
"\n"
"    {scope} {var_name}\n"
"\n"
"should have been included as the first line inside your function.\n"
msgstr ""

#: runtime_errors\unbound_local_error.py:80
msgid ""
"Did you forget to add `{scope} {var_name}`?\n"
msgstr ""

#: runtime_errors\unbound_local_error.py:92
msgid "The similar name `{name}` was found in the local scope. "
msgstr ""

#: runtime_errors\value_error.py:74 runtime_errors\value_error.py:83
msgid ""
"In this instance, there are more names ({nb_names})\n"
"than {length}, the length of the iterable.\n"
msgstr ""

#: runtime_errors\value_error.py:89
msgid ""
"In this instance, there are more names ({nb_names})\n"
"than the length of the iterable, {iter_type} of length {length}.\n"
msgstr ""

#: runtime_errors\value_error.py:109 runtime_errors\value_error.py:119
msgid ""
"In this instance, there are fewer names ({nb_names})\n"
"than the length of the iterable.\n"
msgstr ""

#: runtime_errors\value_error.py:125
msgid ""
"In this instance, there are fewer names ({nb_names})\n"
"than the length of the iterable, {iter_type} of length {length}.\n"
msgstr ""

#: runtime_errors\value_error.py:146
msgid ""
"`int()` expects an argument that looks like a number in base `{base}`\n"
"but you gave it an empty string.\n"
msgstr ""

#: runtime_errors\value_error.py:152
msgid ""
"`{value}` is an invalid argument for `int()` in base `{base}`.\n"
msgstr ""

#: runtime_errors\value_error.py:167
msgid ""
"In base `{base}`, `int()` is most often use to convert a string\n"
"containing the digits `0` to `{max_n}` into an integer.\n"
msgstr ""

#: runtime_errors\value_error.py:172
msgid ""
"In base `11`, `int()` is most often use to convert a string\n"
"containing the digits `0` to `9` and the letter `'a'` into an integer.\n"
msgstr ""

#: runtime_errors\value_error.py:177
msgid ""
"In base `base`, `int()` is most often use to convert a string\n"
"containing the digits `0` to `9` and the letters\n"
"from `'a'` to `'{max_n}'` into an integer.\n"
msgstr ""

#: runtime_errors\value_error.py:183
msgid ""
"When base `0` is specified, `int()` expects the string argument to\n"
"represent an integer literal.\n"
msgstr ""

#: runtime_errors\value_error.py:196
msgid ""
"You need to convert `'{value}'` to a float first.\n"
msgstr ""

#: runtime_errors\value_error.py:197
msgid ""
"The string `'{value}'` needs to be first converted using `float()`\n"
"before the result can be converted into an integer using `int()`.\n"
msgstr ""

#: runtime_errors\value_error.py:213
msgid ""
"Did you specify an invalid month?\n"
msgstr ""

#: runtime_errors\value_error.py:214
msgid ""
"I am guessing that you specify an invalid value for a month\n"
"in a `date` object. Valid values are integers, from 1 to 12.\n"
msgstr ""

#: runtime_errors\value_error.py:231
msgid ""
"The name `{var}` is used both as the name of a class variable\n"
"and as a string item in the class `__slots__`;\n"
"this is not allowed.\n"
msgstr ""

#: runtime_errors\value_error.py:266
msgid ""
"I do not recognize this error message.\n"
"I am guessing that the problem is with the function `{name}`.\n"
msgstr ""

#: runtime_errors\value_error.py:272
msgid ""
"Its docstring is:\n"
"\n"
"`'''{docstring}'''`\n"
msgstr ""

#: runtime_errors\value_error.py:276
msgid ""
"I have no more information.\n"
msgstr ""

#: runtime_errors\zero_division_error.py:21
msgid ""
"Using the modulo operator, you are dividing by zero.\n"
msgstr ""

#: runtime_errors\zero_division_error.py:22
msgid ""
"You are dividing by zero.\n"
msgstr ""

#: runtime_errors\zero_division_error.py:45
#: runtime_errors\zero_division_error.py:74
msgid ""
"You are dividing by the following term\n"
"\n"
"    {expression}\n"
"\n"
"which is equal to zero.\n"
msgstr ""

#: runtime_errors\zero_division_error.py:51
#: runtime_errors\zero_division_error.py:80
#: runtime_errors\zero_division_error.py:95
#: runtime_errors\zero_division_error.py:102
msgid ""
"The following mathematical expression includes a division by zero:\n"
"\n"
"    {expression}\n"
msgstr ""

#: runtime_errors\zero_division_error.py:89
#: runtime_errors\zero_division_error.py:134
msgid ""
"Using the modulo operator, you are dividing by the following term\n"
"\n"
"    {expression}\n"
"\n"
"which is equal to zero.\n"
msgstr ""

#: runtime_errors\zero_division_error.py:100
msgid ""
"The second argument of the `divmod()` function is zero.\n"
msgstr ""

#: runtime_errors\zero_division_error.py:117
msgid ""
"You are attempting to raise the number 0 to a negative power\n"
"which is equivalent to dividing by zero.\n"
msgstr ""

#: runtime_errors\zero_division_error.py:140
msgid ""
"The following mathematical expression includes a division by zero\n"
"done using the modulo operator:\n"
"\n"
"    {expression}\n"
msgstr ""

#: runtime_errors\zero_division_error.py:156
msgid ""
"The second argument of the `divmod()` function is equal to zero.\n"
msgstr ""

#: syntax_errors\analyze_syntax.py:27
msgid ""
"Currently, I cannot guess the likely cause of this error.\n"
"Try to examine closely the line indicated as well as the line\n"
"immediately above to see if you can identify some misspelled\n"
"word, or missing symbols, like (, ), [, ], :, etc.\n"
"\n"
"Unless your code uses type annotations, which are beyond our scope,\n"
"if you think that this is something which should be handled\n"
"by friendly, please report this case to\n"
"https://github.com/aroberge/friendly/issues\n"
"\n"
msgstr ""

#: syntax_errors\analyze_syntax.py:73
msgid ""
"Python told us that it expected a colon at the position indicated.\n"
"However, adding a colon or replacing something else by a colon\n"
"would not fix the problem.\n"
msgstr ""

#: syntax_errors\analyze_syntax.py:87
msgid ""
"Python gave us the following informative message\n"
"about the possible cause of the error:\n"
"\n"
"    {message}\n"
"\n"
"However, I do not recognize this information and I have\n"
"to guess what caused the problem, but I might be wrong.\n"
"\n"
msgstr ""

#: syntax_errors\error_in_def.py:18 syntax_errors\statement_analyzer.py:17
msgid ""
"However, making such a change would still not correct\n"
"all the syntax errors in the code you wrote.\n"
msgstr ""

#: syntax_errors\error_in_def.py:28
msgid ""
"The correct syntax is:\n"
"\n"
"    {async_}def name ( ... ):"
msgstr ""

#: syntax_errors\error_in_def.py:81
msgid ""
"A function needs a name.\n"
msgstr ""

#: syntax_errors\error_in_def.py:82
msgid ""
"You tried to define a function and did not use the correct syntax.\n"
msgstr ""

#: syntax_errors\error_in_def.py:86
msgid ""
"Functions and methods need a name.\n"
msgstr ""

#: syntax_errors\error_in_def.py:87
msgid ""
"You tried to define a function or method and did not use the correct syntax.\n"
msgstr ""

#: syntax_errors\error_in_def.py:111 syntax_errors\error_in_def.py:139
#: syntax_errors\message_analyzer.py:1284
#: syntax_errors\message_analyzer.py:1296
#: syntax_errors\statement_analyzer.py:1179
#: syntax_errors\statement_analyzer.py:1201
msgid ""
"Did you forget parentheses?\n"
msgstr ""

#: syntax_errors\error_in_def.py:112 syntax_errors\error_in_def.py:140
msgid ""
"Perhaps you forgot to include parentheses.\n"
"You might have meant to write\n"
"\n"
"    {line}\n"
msgstr ""

#: syntax_errors\error_in_def.py:161
msgid ""
"A function definition statement must end with a colon.\n"
msgstr ""

#: syntax_errors\error_in_def.py:167 syntax_errors\error_in_def.py:188
msgid ""
"Did you forget to write a colon?\n"
msgstr ""

#: syntax_errors\error_in_def.py:168 syntax_errors\message_analyzer.py:1325
msgid ""
"You wrote `{bad}` instead of a colon.\n"
msgstr ""

#: syntax_errors\error_in_def.py:177
msgid ""
"Did you write something by mistake after the colon?\n"
msgstr ""

#: syntax_errors\error_in_def.py:178
msgid ""
"A block of code must come after the colon.\n"
msgstr ""

#: syntax_errors\error_in_def.py:179
msgid ""
"Removing `{bad}`, might fix the problem.\n"
msgstr ""

#: syntax_errors\error_in_def.py:203
msgid ""
"You cannot use a Python keyword as a function name.\n"
msgstr ""

#: syntax_errors\error_in_def.py:204
msgid ""
"You tried to use the Python keyword `{kwd}` as a function name.\n"
msgstr ""

#: syntax_errors\error_in_def.py:212
msgid ""
"There are more syntax errors later in your code.\n"
msgstr ""

#: syntax_errors\error_in_def.py:230
msgid ""
"You wrote an invalid function name.\n"
msgstr ""

#: syntax_errors\error_in_def.py:231
msgid ""
"The name of a function must be a valid Python identifier,\n"
"that is a name that begins with a letter or an underscore character, `_`,\n"
"and which contains only letters, digits or the underscore character.\n"
msgstr ""

#: syntax_errors\error_in_def.py:237
msgid ""
"You attempted to use a string as a function name.\n"
msgstr ""

#: syntax_errors\error_in_def.py:253
msgid ""
"You forgot to name your function.\n"
msgstr ""

#: syntax_errors\error_in_def.py:261
msgid ""
"However, there are some other syntax errors in your code.\n"
msgstr ""

#: syntax_errors\error_in_def.py:277
msgid ""
"I am guessing that you tried to use the Python keyword\n"
"`{kwd}` as an argument in the definition of a function\n"
"where an identifier (variable name) was expected.\n"
msgstr ""

#: syntax_errors\error_in_def.py:293
msgid ""
"You cannot use dotted names as function arguments.\n"
msgstr ""

#: syntax_errors\error_in_def.py:295
msgid ""
"Perhaps you meant to write a comma.\n"
msgstr ""

#: syntax_errors\error_in_def.py:296 syntax_errors\error_in_def.py:494
#: syntax_errors\statement_analyzer.py:739 syntax_errors\syntax_utils.py:110
msgid ""
"Did you mean to write a comma?\n"
msgstr ""

#: syntax_errors\error_in_def.py:300
msgid ""
"You cannot use dots in function names.\n"
msgstr ""

#: syntax_errors\error_in_def.py:311
msgid ""
"`/` indicates that the previous arguments in a function definition\n"
"are positional arguments.\n"
msgstr ""

#: syntax_errors\error_in_def.py:317
msgid ""
"Function definitions cannot include the symbol `/` in this Python version.\n"
msgstr ""

#: syntax_errors\error_in_def.py:320
msgid ""
"This symbol can only be used with Python versions 3.8.0 or newer.\n"
"You are using Python version {version}.\n"
msgstr ""

#: syntax_errors\error_in_def.py:329
msgid ""
"You have unspecified keyword arguments that appear before\n"
"the symbol `/`.\n"
msgstr ""

#: syntax_errors\error_in_def.py:333
msgid ""
"Keyword arguments must appear after the `/` symbol.\n"
msgstr ""

#: syntax_errors\error_in_def.py:338
msgid ""
"However, `*` indicates that the arguments\n"
"that follow must be keyword arguments.\n"
"When they are used together, `/` must appear before `*`.\n"
msgstr ""

#: syntax_errors\error_in_def.py:343
msgid ""
"`*` must appear after `/` in a function definition.\n"
msgstr ""

#: syntax_errors\error_in_def.py:345
msgid ""
"`*{name}` must appear after `/` in a function definition.\n"
msgstr ""

#: syntax_errors\error_in_def.py:352
msgid ""
"You can only use `/` once in a function definition.\n"
msgstr ""

#: syntax_errors\error_in_def.py:367
msgid ""
"You can only use `*` once in a function definition.\n"
msgstr ""

#: syntax_errors\error_in_def.py:373
msgid ""
"You have used it twice, with `*{first}` and `*{second}`.\n"
msgstr ""

#: syntax_errors\error_in_def.py:381
msgid ""
"It must either be used by itself, `*`,\n"
"or in the form `*{args}`, but not both.\n"
msgstr ""

#: syntax_errors\error_in_def.py:390
msgid ""
"`*{args}` must appear before `**{kwargs}`.\n"
msgstr ""

#: syntax_errors\error_in_def.py:394
msgid ""
"`**{kwargs}` must appear after the `*` operator.\n"
msgstr ""

#: syntax_errors\error_in_def.py:410
msgid ""
"You cannot use numbers as function arguments.\n"
msgstr ""

#: syntax_errors\error_in_def.py:411
msgid ""
"You used a number as an argument when defining a function.\n"
"You can only use identifiers (variable names) as function arguments.\n"
msgstr ""

#: syntax_errors\error_in_def.py:425
msgid ""
"You cannot use strings as function arguments.\n"
msgstr ""

#: syntax_errors\error_in_def.py:426
msgid ""
"You used a string as an argument when defining a function.\n"
"You can only use identifiers (variable names) as function arguments.\n"
msgstr ""

#: syntax_errors\error_in_def.py:440
msgid ""
"You cannot have explicit tuples as function arguments.\n"
msgstr ""

#: syntax_errors\error_in_def.py:442
msgid ""
"You can only use identifiers (variable names) as function arguments.\n"
"Assign any tuple to a parameter and unpack it\n"
"within the body of the function.\n"
msgstr ""

#: syntax_errors\error_in_def.py:456
msgid ""
"You cannot have explicit lists as function arguments.\n"
msgstr ""

#: syntax_errors\error_in_def.py:457 syntax_errors\error_in_def.py:470
msgid ""
"You can only use identifiers (variable names) as function arguments.\n"
msgstr ""

#: syntax_errors\error_in_def.py:469
msgid ""
"You cannot have any explicit dict or set as function arguments.\n"
msgstr ""

#: syntax_errors\error_in_def.py:487
msgid ""
"You cannot have operators as function arguments.\n"
msgstr ""

#: syntax_errors\error_in_def.py:495
msgid ""
"I suspect you made a typo and wrote `{op}` instead of a comma.\n"
"The following statement contains no syntax error:\n"
"\n"
"    {new_statement}"
msgstr ""

#: syntax_errors\error_in_def.py:507
msgid ""
"Did you mean to write an equal sign?\n"
msgstr ""

#: syntax_errors\error_in_def.py:508
msgid ""
"I suspect you made a typo and wrote `{op}` instead of an equal sign.\n"
"The following statement contains no syntax error:\n"
"\n"
"    {new_statement}"
msgstr ""

#: syntax_errors\error_in_def.py:520
msgid ""
"Did you mean to write `{op}`?\n"
msgstr ""

#: syntax_errors\error_in_def.py:521
msgid ""
"I suspect you made a typo and added `{op}` by mistake.\n"
"The following statement contains no syntax error:\n"
"\n"
"    {new_statement}"
msgstr ""

#: syntax_errors\error_in_def.py:537
msgid ""
"You cannot use `{op}` as an argument.\n"
msgstr ""

#: syntax_errors\error_in_def.py:541
msgid ""
"I suspect you made a typo and wrote `{op}` by mistake.\n"
"If you replace it by a unique variable name, the result\n"
"will contain no syntax error.\n"
msgstr ""

#: syntax_errors\error_in_def.py:549
msgid ""
"I suspect you made a typo and wrote `{op}` by mistake,\n"
"perhaps instead of writing an identifier (variable name).\n"
msgstr ""

#: syntax_errors\error_in_def.py:558
msgid ""
"The `**` operator needs to be followed by an identifier (variable name).\n"
msgstr ""

#: syntax_errors\error_in_def.py:583
msgid ""
"Positional arguments must come before keyword arguments.\n"
msgstr ""

#: syntax_errors\error_in_def.py:584
msgid ""
"`{arg}` is a positional argument that appears after one or more\n"
"keyword arguments in your function definition.\n"
msgstr ""

#: syntax_errors\indentation_error.py:10
msgid ""
"Line `{number}` identified above is more indented than expected.\n"
msgstr ""

#: syntax_errors\indentation_error.py:14
msgid ""
"Line `{number}` identified above was expected to begin a new indented block.\n"
msgstr ""

#: syntax_errors\indentation_error.py:19
msgid ""
"Line `{number}` identified above is less indented than expected.\n"
msgstr ""

#: syntax_errors\indentation_error.py:31
msgid ""
"However, line {number}, which is identified as having a problem,\n"
"consists of a single string which is also the case\n"
"for the preceding line.\n"
"Perhaps you meant to include a continuation character, `\\`,\n"
"at the end of line {preceding}.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:83
msgid "You cannot assign a value to `{keyword}`."
msgstr ""

#: syntax_errors\message_analyzer.py:86
msgid ""
"You cannot assign a value to the ellipsis symbol [`...`].\n"
msgstr ""

#: syntax_errors\message_analyzer.py:87
msgid ""
"The ellipsis symbol `...` is a constant in Python;you cannot assign it a different value.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:92
msgid ""
"`{keyword}` is a constant in Python; you cannot assign it a different value.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:97
#: syntax_errors\statement_analyzer.py:909
msgid ""
"You were trying to assign a value to the Python keyword `{keyword}`.\n"
"This is not allowed.\n"
"\n"
msgstr ""

#: syntax_errors\message_analyzer.py:114 syntax_errors\message_analyzer.py:130
#: syntax_errors\message_analyzer.py:151 syntax_errors\message_analyzer.py:191
#: syntax_errors\message_analyzer.py:204 syntax_errors\message_analyzer.py:224
#: syntax_errors\message_analyzer.py:324 syntax_errors\message_analyzer.py:365
#: syntax_errors\message_analyzer.py:441
msgid ""
"You can only assign objects to identifiers (variable names).\n"
msgstr ""

#: syntax_errors\message_analyzer.py:115
msgid ""
"On the left-hand side of an equal sign, you have a\n"
"conditional expression instead of the name of a variable.\n"
"A conditional expression has the following form:\n"
"\n"
"    variable = object if condition else other_object"
msgstr ""

#: syntax_errors\message_analyzer.py:131
msgid ""
"On the left-hand side of an equal sign, you have\n"
"an expression instead of the name of a variable.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:160
msgid "some value"
msgstr ""

#: syntax_errors\message_analyzer.py:161
msgid ""
"You wrote an expression like\n"
"\n"
"    {fn_call} = {value}\n"
"\n"
"where `{fn_call}`, on the left-hand side of the equal sign, is\n"
"a function call and not the name of a variable.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:173
msgid ""
"You wrote the expression\n"
"\n"
"    {fn_call} = {value}\n"
"\n"
"where `{fn_call}`, on the left-hand side of the equal sign, either is\n"
"or includes a function call and is not simply the name of a variable.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:192
msgid ""
"On the left-hand side of an equal sign, you have a\n"
"generator expression instead of the name of a variable.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:205 syntax_errors\message_analyzer.py:341
msgid ""
"You wrote an expression that has the f-string `{fstring}`\n"
"on the left-hand side of the equal sign.\n"
"An f-string should only appear on the right-hand side of an equal sign.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:225
msgid ""
"You wrote an expression that includes the `yield` keyword\n"
"on the left-hand side of the equal sign.\n"
"You cannot assign a value to such an expression.\n"
"Note that, like the keyword `return`,\n"
"`yield` can only be used inside a function.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:241
msgid ""
"You have written an f-string whose content `{...}`\n"
"includes a backslash; this is not allowed.\n"
"Perhaps you can replace the part that contains a backslash by\n"
"some variable. For example, suppose that you have an f-string like:\n"
"\n"
"    f\"{... 'hello\\n' ...}\"\n"
"\n"
"you could write this as\n"
"\n"
"    hello = 'hello\\n'\n"
"    f\"{... hello ...}\"\n"
msgstr ""

#: syntax_errors\message_analyzer.py:263
msgid "of type `int`"
msgstr ""

#: syntax_errors\message_analyzer.py:264
msgid "of type `complex`"
msgstr ""

#: syntax_errors\message_analyzer.py:265
msgid "of type `float`"
msgstr ""

#: syntax_errors\message_analyzer.py:266
msgid "of type `str`"
msgstr ""

#: syntax_errors\message_analyzer.py:267
msgid "of type `dict`"
msgstr ""

#: syntax_errors\message_analyzer.py:268
msgid "of type `list`"
msgstr ""

#: syntax_errors\message_analyzer.py:269
msgid "of type `set`"
msgstr ""

#: syntax_errors\message_analyzer.py:270
msgid "of type `tuple`"
msgstr ""

#: syntax_errors\message_analyzer.py:288
msgid ""
"The object named `{name}` is defined with type annotation\n"
"as a local variable. It cannot be declared to be a global variable.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:325
msgid ""
"A for loop must have the form:\n"
"\n"
"    for ... in sequence:\n"
"\n"
"where `...` must contain only identifiers (variable names)\n"
"and not literals like `{bad_token}`.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:350
msgid "variable_name"
msgstr ""

#: syntax_errors\message_analyzer.py:354
msgid ""
"Perhaps you meant to write:\n"
"\n"
"    {name} = {literal}\n"
"\n"
msgstr ""

#: syntax_errors\message_analyzer.py:359
msgid "Perhaps you meant to write `{name} = {literal}`"
msgstr ""

#: syntax_errors\message_analyzer.py:381
msgid ""
"You wrote an expression like\n"
"\n"
"    {literal} = {name}\n"
"where `{literal}`, on the left-hand side of the equal sign,\n"
"is or includes an actual object {of_type}\n"
"and is not simply the name of a variable.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:404
msgid ""
"You wrote an expression that includes some mathematical operations\n"
"on the left-hand side of the equal sign which should be\n"
"only used to assign a value to a variable.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:412
msgid ""
"Perhaps you meant to write `{name}` instead of `{original}`\n"
msgstr ""

#: syntax_errors\message_analyzer.py:417
#: syntax_errors\statement_analyzer.py:532
msgid ""
"Perhaps you needed `==` instead of `=`.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:443
msgid ""
"You cannot use the augmented assignment operator `:=`,\n"
"sometimes called the walrus operator, with literals like `{bad_token}`.\n"
"You can only assign objects to identifiers (variable names).\n"
msgstr ""

#: syntax_errors\message_analyzer.py:455
msgid ""
"You declared `{name}` as being both a global and nonlocal variable.\n"
"A variable can be global, or nonlocal, but not both at the same time.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:468
msgid ""
"The Python keyword `break` can only be used inside a `for` loop or inside a `while` loop.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:480
msgid ""
"The Python keyword `continue` can only be used inside a `for` loop or inside a `while` loop.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:499
msgid ""
"You attempted to delete a function call\n"
"\n"
"    {line}\n"
"instead of deleting the function's name\n"
"\n"
"    {correct}\n"
msgstr ""

#: syntax_errors\message_analyzer.py:522
msgid ""
"You cannot delete the constant `{constant}`.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:526
msgid ""
"You cannot delete the literal `{literal}`.\n"
"You can only delete the names of objects, or\n"
"individual items in a container.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:539
msgid ""
"You have defined a function repeating the keyword argument\n"
"\n"
"    {name}\n"
"twice; each keyword argument should appear only once in a function definition.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:556
msgid ""
"Did you forget a closing quote?\n"
msgstr ""

#: syntax_errors\message_analyzer.py:557
msgid ""
"You started writing a string with a single or double quote\n"
"but never ended the string with another quote on that line.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:564
msgid ""
"Perhaps you meant to write the backslash character, `\\`\n"
"as the last character in the string and forgot that you\n"
"needed to escape it by writing two `\\` in a row.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:569
msgid ""
"Did you forget to escape a backslash character?\n"
msgstr ""

#: syntax_errors\message_analyzer.py:580
msgid ""
"One of the following two possibilities could be the cause:\n"
"1. You meant to do a comparison with == and wrote = instead.\n"
"2. You called a function with a named argument:\n"
"\n"
"        a_function(invalid=...)\n"
"\n"
"where `invalid` is not a valid identifier (variable name) in Python\n"
"either because it starts with a number, or is a string,\n"
"or contains a period, etc.\n"
"\n"
msgstr ""

#: syntax_errors\message_analyzer.py:598
msgid ""
"You are using a generator expression, something of the form\n"
"\n"
"    x for x in thing\n"
"\n"
"You must add parentheses enclosing that expression.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:611
msgid ""
"You have called a function repeating the same keyword argument (`{arg}`).\n"
"Each keyword argument should appear only once in a function call.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:623
msgid ""
"You likely called a function with a named argument:\n"
"\n"
"    a_function(invalid=something) \n"
"\n"
"where `invalid` is not a valid variable name in Python\n"
"either because it starts with a number, or is a string,\n"
"or contains a period, etc.\n"
"\n"
msgstr ""

#: syntax_errors\message_analyzer.py:641
#: syntax_errors\statement_analyzer.py:160
msgid ""
"Did you use copy-paste?\n"
msgstr ""

#: syntax_errors\message_analyzer.py:642
msgid ""
"Python indicates that you used the unicode character `{bad_character}`\n"
"which is not allowed.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:693
msgid ""
"Python tells us that the closing `{closing}` on the last line shown\n"
"does not match the opening `{opening}` on line {lineno}.\n"
"\n"
msgstr ""

#: syntax_errors\message_analyzer.py:698
msgid ""
"Python tells us that the closing `{closing}` on the last line shown\n"
"does not match the opening `{opening}`.\n"
"\n"
msgstr ""

#: syntax_errors\message_analyzer.py:712
msgid ""
"Perhaps you forgot a closing quote.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:729
msgid ""
"Inside the f-string `{fstring}`, \n"
"you have another string, which starts with either a\n"
"single quote (') or double quote (\"), without a matching closing one.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:751
msgid ""
"You are including the statement\n"
"\n"
"    {newline}\n"
"\n"
"indicating that `{name}` is a variable defined outside a function.\n"
"You are also using the same `{name}` as an argument for that\n"
"function, thus indicating that it should be variable known only\n"
"inside that function, which is the contrary of what `global` implied.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:770
msgid ""
"You assigned a value to the variable `{name}`\n"
"before declaring it as a global variable.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:785
msgid ""
"You used the variable `{name}`\n"
"before declaring it as a global variable.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:799
msgid ""
"Did you forget to add `nonlocal`?\n"
msgstr ""

#: syntax_errors\message_analyzer.py:800
msgid ""
"You assigned a value to the variable `{name}`\n"
"before declaring it as a nonlocal variable.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:814
msgid ""
"You used `{name}` as a parameter for a function\n"
"before declaring it also as a nonlocal variable:\n"
"`{name}` cannot be both at the same time.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:829
msgid ""
"Did you forget to write `nonlocal` first?\n"
msgstr ""

#: syntax_errors\message_analyzer.py:831
msgid ""
"You used the variable `{name}`\n"
"before declaring it as a nonlocal variable.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:843
msgid ""
"You used the nonlocal keyword at a module level.\n"
"The nonlocal keyword refers to a variable inside a function\n"
"given a value outside that function."
msgstr ""

#: syntax_errors\message_analyzer.py:858
msgid ""
"You declared the variable `{name}` as being a\n"
"nonlocal variable but it cannot be found.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:871
msgid ""
"You are using the continuation character `\\` outside of a string,\n"
"and it is followed by some other character(s).\n"
msgstr ""

#: syntax_errors\message_analyzer.py:894
msgid ""
"I am guessing that you wanted to divide by the number {number} \n"
"and wrote \\ instead of /."
msgstr ""

#: syntax_errors\message_analyzer.py:898
msgid ""
"Did you mean to divide by {number}?\n"
msgstr ""

#: syntax_errors\message_analyzer.py:901
msgid ""
"I am guessing that you forgot to enclose some content in a string.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:912
msgid ""
"Python tells us that it reached the end of the file\n"
"and expected more content.\n"
"\n"
msgstr ""

#: syntax_errors\message_analyzer.py:919
msgid ""
"I will attempt to be give a bit more information.\n"
"\n"
msgstr ""

#: syntax_errors\message_analyzer.py:937
#: syntax_errors\statement_analyzer.py:107
msgid ""
"The closing {bracket} on line {linenumber} does not match anything.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:948
msgid ""
"In Python, you can call functions with only positional arguments\n"
"\n"
"    test(1, 2, 3)\n"
"\n"
"or only keyword arguments\n"
"\n"
"    test(a=1, b=2, c=3)\n"
"\n"
"or a combination of the two\n"
"\n"
"    test(1, 2, c=3)\n"
"\n"
"but with the keyword arguments appearing after all the positional ones.\n"
"According to Python, you used positional arguments after keyword ones.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:966
msgid ""
"In Python, you can define functions with only positional arguments\n"
"\n"
"    def test(a, b, c): ...\n"
"\n"
"or only keyword arguments\n"
"\n"
"    def test(a=1, b=2, c=3): ...\n"
"\n"
"or a combination of the two\n"
"\n"
"    def test(a, b, c=3): ...\n"
"\n"
"but with the keyword arguments appearing after all the positional ones.\n"
"According to Python, you used positional arguments after keyword ones.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:998
msgid ""
"Perhaps you need to type\n"
"\n"
"     print({message})\n"
"\n"
"In older version of Python, `print` was a keyword.\n"
"Now, `print` is a function; you need to use parentheses to call it.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1005
#: syntax_errors\statement_analyzer.py:589
msgid ""
"Note that arguments of `print` must be separated by commas.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1006
msgid ""
"Did you mean `print({message})`?\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1020
msgid ""
"The star operator `*` is interpreted to mean that\n"
"iterable unpacking is to be used to assign a name\n"
"to each item of an iterable, which does not make sense here.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1026
#: syntax_errors\statement_analyzer.py:1489
msgid ""
"You can only delete names of objects, or items in mutable containers\n"
"such as `list`, `set`, or `dict`.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1036
msgid ""
"It looks like you surrounded a starred name by parentheses.\n"
"This was not considered a SyntaxError before Python version 3.9.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1050
msgid ""
"You can only use a `return` statement inside a function or method.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1060
msgid ""
"Your code is too complex for Python:\n"
"you need to reduce the number of indented code blocks\n"
"contained inside other code blocks.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1074
msgid ""
"Your code is too complex for Python:\n"
"you need to reduce the number of parentheses\n"
"contained inside other parentheses.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1089
msgid ""
"Did you forget something after `*`?\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1090
msgid ""
"Assuming you were defining a function, you need\n"
"to replace `*` by either `*arguments` or\n"
"by `*, named_argument=value`.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1104
msgid ""
"This is a message that was added in Python 3.9\n"
"to prevent redefining `__peg_parser__`.\n"
"It should not be present in other versions.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1121
msgid ""
"The available features are `{names}`.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1126
msgid ""
"When using a `from __future__ import` statement,\n"
"you must import specific named features.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1137
msgid ""
"Instead of `{feature}`, perhaps you meant to import `{name}`.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1142
msgid ""
"`{feature}` is not a valid feature of module `__future__`.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1155
msgid ""
"A `from __future__ import` statement changes the way Python\n"
"interprets the code in a file.\n"
"It must appear at the beginning of the file."
msgstr ""

#: syntax_errors\message_analyzer.py:1169
msgid ""
"I suspect you wrote `from __future__ import braces` following\n"
"someone else's suggestion. This will never work.\n"
"\n"
"Unlike other programming languages, Python's code block are defined by\n"
"their indentation level, and not by using some curly braces, like `{...}`.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1196
msgid ""
"You started writing a triple-quoted string but never wrote\n"
"the triple quotes needed to end the string.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1215
#: syntax_errors\message_analyzer.py:1225
msgid ""
"Did you mean `{num}`?\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1216
msgid ""
"Perhaps you meant to write the octal number `{num}`\n"
"and forgot the letter 'o', or perhaps you meant to write\n"
"a decimal integer and did not know that it could not start with zeros.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1226
msgid ""
"Perhaps you meant to write the integer `{num}`\n"
"and did not know that it could not start with zeros.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1276
#: syntax_errors\statement_analyzer.py:1151
msgid ""
"I am guessing that you were writing a comprehension or a generator expression\n"
"and forgot to include parentheses around tuples.\n"
"As an example, instead of writing\n"
"\n"
"    [i, i**2 for i in range(10)]\n"
"\n"
"you would need to write\n"
"\n"
"    [(i, i**2) for i in range(10)]\n"
"\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1297
#: syntax_errors\statement_analyzer.py:1202
msgid ""
"I am guessing that you wanted to use an `except` statement\n"
"with multiple exception types. If that is the case, you must\n"
"surround them with parentheses.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1318
msgid ""
"Did you forget a colon?\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1319
msgid ""
"Python expected a colon at the position indicated.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1349
msgid ""
"Python tells us that the {bracket} was never closed.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1352
msgid ""
"The {bracket} was never closed.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1370
#: syntax_errors\statement_analyzer.py:663
msgid ""
"The double star operator `**` is likely interpreted to mean that\n"
"dict unpacking is to be used which is not allowed or does not make sense here.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1407
msgid "Python tells us that you have written an invalid number."
msgstr ""

#: syntax_errors\message_analyzer.py:1408
msgid "However, I think that the problem might be the following."
msgstr ""

#: syntax_errors\message_analyzer.py:1444
msgid ""
"I have no suggestion to offer to fix this problem.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1474
msgid ""
"Did you forget to add `else`?\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1475
msgid ""
"An `else some_value` clause was expected after the `if` expression.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1485
msgid ""
"I suspect that you wrote a string that contains\n"
"one backslash character, `\\` followed by an uppercase `U`\n"
"and some more characters.\n"
"Python likely interpreted this as indicating the beginning of\n"
"what is known as an escape sequence for special unicode characters.\n"
"To solve the problem, either write a so-called 'raw string'\n"
"by adding the letter `r` as a prefix in\n"
"front of the string, or replace `\\U`, by `\\\\U`.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1508
#: syntax_errors\message_analyzer.py:1531
msgid ""
"You are using the augmented assignment operator `:=` inside\n"
"a comprehension to assign a value to the iteration variable `{var}`.\n"
"This variable is meant to be used only inside the comprehension.\n"
"The augmented assignment operator is normally used to assign a value\n"
"to a variable so that the variable can be reused later.\n"
"This is not possible for variable `{var}`.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1548
msgid ""
"A star assignment must be of the form:\n"
"\n"
"    ... *name = list_or_tuple\n"
"\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1562
msgid ""
"Python indicates that you need to surround an expression\n"
"ending with a comma by parentheses.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1571
msgid ""
"However, I suspect that you wrote the keyword `{boolean}` by mistake.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1575
#: syntax_errors\statement_analyzer.py:1437
msgid ""
"The Python keyword `{boolean}` can only be used for boolean expressions.\n"
"Perhaps you meant to write\n"
"\n"
"`{new_statement}`\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1581
#: syntax_errors\message_analyzer.py:1592
#: syntax_errors\message_analyzer.py:1607
msgid ""
"Perhaps you meant to write\n"
"\n"
"`{new_statement}`\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1589
#: syntax_errors\message_analyzer.py:1604
msgid ""
"However, if you remove the last comma, there will be no syntax error.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1613
msgid ""
"I have no additional suggestion to offer.\n"
"Please feel free to report this case.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1627
msgid ""
"You can only use a `yield` statement inside a function.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1636
msgid ""
"It looks like the error occurred as you were writing a Python dict.\n"
"Perhaps you wrote a dict key without writing the corresponding value.\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1640
#: syntax_errors\message_analyzer.py:1653
#: syntax_errors\statement_analyzer.py:1554
msgid ""
"Did you forget to write a dict value?\n"
msgstr ""

#: syntax_errors\message_analyzer.py:1649
#: syntax_errors\statement_analyzer.py:1545
msgid ""
"It looks like the error occurred as you were writing a Python dict.\n"
"Perhaps you forgot to write a value after a colon.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:137
msgid ""
"The closing {bracket} on line {close_lineno} does not match the opening {open_bracket} on line {open_lineno}.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:166
msgid ""
"It looks like you copy-pasted code from an interactive interpreter.\n"
"The Python prompt, `>>>`, should not be included in your code.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:177
msgid ""
"It looks like you copy-pasted code from an interactive interpreter.\n"
"The Python prompt, `...`, should not be included in your code.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:192
msgid ""
"You should not use the backquote character.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:193
msgid ""
"You are using the backquote character.\n"
"Either you meant to write a single quote, ', or copied Python 2 code;\n"
"in this latter case, use the function `repr(x)`."
msgstr ""

#: syntax_errors\statement_analyzer.py:215
msgid ""
"You forgot to add a condition.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:217
msgid ""
"An `if` statement requires a condition:\n"
"\n"
"    if condition:\n"
"        ...\n"
"\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:223
msgid ""
"A `while` loop requires a condition:\n"
"\n"
"    while condition:\n"
"        ...\n"
"\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:229
msgid ""
"A `for` loop requires at least 3 more terms.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:230
msgid ""
"A `for` loop is an iteration over a sequence:\n"
"\n"
"    for element in sequence:\n"
"        ...\n"
"\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:236
msgid ""
"A class needs a name.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:237
msgid ""
"A `class` statement requires a name:\n"
"\n"
"    class SomeName:\n"
"        ...\n"
"\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:255
msgid ""
"You cannot use the Python keyword `{word}` as an attribute.\n"
"\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:261
msgid ""
"`{word}` cannot be used as an attribute.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:275
msgid ""
"Perhaps you meant to write `elif`.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:276
msgid ""
"You likely meant to use Python's `elif` keyword\n"
"but wrote `{name}` instead.\n"
"\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:294
msgid ""
"Did you mean `from {module} import {function}`?\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:297
msgid ""
"You wrote something like\n"
"\n"
"    import {function} from {module}\n"
"instead of\n"
"\n"
"    from {module} import {function}\n"
"\n"
"\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:321
msgid ""
"Perhaps you misplaced a quote.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:322
msgid ""
"There appears to be a Python identifier (variable name)\n"
"immediately following a string.\n"
"I suspect that you were trying to use a quote inside a string\n"
"that was enclosed in quotes of the same kind.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:354
msgid ""
"The augmented assignment operator is not allowed in Python version {version}.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:357
msgid ""
"You appear to be using the operator `:=`, sometimes called\n"
"the walrus operator. This operator requires the use of\n"
"Python 3.8 or newer. You are using version {version}.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:397
msgid ""
"Did you write operators in an incorrect order?\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:398
msgid ""
"It looks like you wrote two operators (`{first}` and `{second}`)\n"
"in the wrong order: `{wrong}` instead of `{correct}`.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:430
msgid ""
"You wrote three equal signs in a row which is allowed in some\n"
"programming languages, but not in Python. To check if two objects\n"
"are equal, use two equal signs, `==`; to see if two names represent\n"
"the exact same object, use the operator `is`.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:436
msgid ""
"Did you mean to use `is` instead of `===`?\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:440
msgid ""
"You cannot have write the same operator, `{op}`, twice in a row.\n"
"Perhaps you wrote one of them by mistake\n"
"or forgot to write something between them.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:451
msgid ""
"You cannot have these two operators, `{first}` and `{second}`,\n"
"following each other.\n"
"It looks like you tried to use a starred expression as a dict value;\n"
"this is not allowed.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:458
msgid ""
"You cannot have these two operators, `{first}` and `{second}`,\n"
"following each other. Perhaps you wrote one of them by mistake\n"
"or forgot to write something between them.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:465
msgid ""
"Or perhaps you included a space by mistake between the two operators\n"
"and meant to write `{oper}` as a single operator.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:497
msgid ""
"Did you mean to use `=`?\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:498
msgid ""
"You use the augmented assignment operator `:=` where\n"
"the normal assignment operator `=` was required.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:533
msgid ""
"You likely used an assignment operator `=` instead of an equality operator `==`.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:538
msgid ""
"Perhaps you needed `==` or `:=` instead of `=`.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:539
msgid ""
"You used an assignment operator `=`; perhaps you meant to use \n"
"an equality operator, `==`, or the walrus operator `:=`.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:564
msgid ""
"In older version of Python, `print` was a keyword.\n"
"Now, `print` is a function; you need to use parentheses to call it.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:587
msgid ""
"Did you mean `{new_line}`?\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:606
msgid ""
"It looks as if you are attempting to use pip to install a module.\n"
"`pip` is a command that needs to run in a terminal,\n"
"not from a Python interpreter.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:614
msgid ""
"Pip cannot be used in a Python interpreter.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:617
msgid ""
"I am guessing that you are attempting to use Python to run a program.\n"
"You must do so from a terminal and not from a Python interpreter.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:629
msgid ""
"You cannot have a dot `.` followed by `{bracket}`.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:639
msgid ""
"Perhaps you need to replace the dot by a comma.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:651
msgid ""
"It looks like you are trying to raise an exception using Python 2 syntax.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:708
msgid ""
"Did you forget a colon `:`?\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:711
msgid ""
"You wrote a `{for_while}` loop but\n"
"forgot to add a colon `:` at the end\n"
"\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:718
msgid ""
"You wrote a statement beginning with\n"
"`{name}` but forgot to add a colon `:` at the end.\n"
"\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:738
msgid ""
"You wrote a semi-colon, `;`, where a comma was expected.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:758
msgid ""
"You wrote semi-colons, `;`, where commas were expected.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:759
msgid ""
"Did you mean to write commas?\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:779
msgid ""
"Did you made a mistake in writing an hexadecimal integer?\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:780
msgid ""
"It looks like you used an invalid character (`{character}`) in an hexadecimal number.\n"
"\n"
"Hexadecimal numbers are base 16 integers that use the symbols `0` to `9`\n"
"to represent values 0 to 9, and the letters `a` to `f` (or `A` to `F`)\n"
"to represent values 10 to 15.\n"
"In Python, hexadecimal numbers start with either `0x` or `0X`,\n"
"followed by the characters used to represent the value of that integer.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:801
msgid ""
"Did you made a mistake in writing an octal integer?\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:802
msgid ""
"It looks like you used an invalid character (`{character}`) in an octal number.\n"
"\n"
"Octal numbers are base 8 integers that only use the symbols `0` to `7`\n"
"to represent values.\n"
"In Python, hexadecimal numbers start with either `0o` or `0O`,\n"
"(the digit zero followed by the letter `o`)\n"
"followed by the characters used to represent the value of that integer.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:831
msgid ""
"Valid names cannot begin with a number.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:838
msgid ""
"Did you mean `{number}j`?\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:839
msgid ""
"Perhaps you thought that `i` could be used to represent\n"
"the square root of `-1`. In Python, the symbol used for this is `j`\n"
"and the complex part is written as `some_number` immediately\n"
"followed by `j`, with no spaces in between.\n"
"Perhaps you meant to write `{number}j`.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:849
msgid ""
"[Note: `{first} * {second}` would also be valid\n"
"since `{first}` is a complex number.]\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:858
msgid ""
"Perhaps you forgot a multiplication operator, `{first} * {second}`.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:874
msgid ""
"Your Python version does not support this f-string feature.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:875
msgid ""
"You are likely using a 'debug' syntax of f-strings introduced\n"
"in Python version 3.8. You are using version {version}.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:881
msgid ""
"You are likely trying to assign a value within an f-string.\n"
"This is not allowed.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:897
msgid ""
"The content of your f-string is invalid. Please consult the documentation:\n"
"https://docs.python.org/3/reference/lexical_analysis.html#f-strings\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:908
msgid ""
"Python keywords cannot be used as identifiers (variable names).\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:931
msgid ""
"`lambda` does not allow parentheses around its arguments.\n"
"This was allowed in Python 2 but it not allowed in Python 3.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:948
msgid ""
"You cannot have explicit tuples as arguments.\n"
"Assign any tuple to a parameter and unpack it\n"
"within the body of the function.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:983
msgid ""
"If you remove `{type_decl}`, you will have a valid Python statement.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:987
msgid ""
"However, even if you remove `{type_decl}`, there would still be some\n"
"some syntax errors.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:992
msgid ""
"You do not need to declare variables in Python.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:993
msgid ""
"It looks like you were trying to declare that `{var}` was\n"
"a variable using the word `{type_decl}`.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1025
msgid ""
"I am guessing that you forgot a comma between two strings\n"
"when defining a dict.\n"
"\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1066
msgid ""
"Did you forget to write `in`?\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1067
msgid ""
"It looks as though you forgot to use the keyword `in`\n"
"as part of a `for` statement. Perhaps you meant:\n"
"\n"
"    {new_statement}\n"
"\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1091
msgid ""
"Did you forget to write parenthesis?\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1092
msgid ""
"It looks as though you forgot to use to use parenthesis with `range`.\n"
"Perhaps you meant:\n"
"\n"
"    {new_statement}\n"
"\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1126
msgid ""
"Perhaps you meant to write `{keyword}` and made a typo.\n"
"The correct line might be `{line}`\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1140
msgid ""
"I am guessing that you were writing a comprehension or a generator expression\n"
"and use the wrong order for a condition.\n"
"The correct order depends if there is an `else` clause or not.\n"
"For example, the correct order for a list comprehensions with\n"
"condition can be either\n"
"\n"
"    [f(x) if condition else other for x in sequence]  # 'if' before 'for'\n"
"\n"
"or, if there is no `else`\n"
"\n"
"    [f(x) for x in sequence if condition]  # 'if' after 'for'\n"
"\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1251
msgid ""
"You cannot have spaces in identifiers (variable names).\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1271
msgid ""
"`bf` is an illegal string prefix.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1272
msgid ""
"I am guessing that you wanted a binary f-string;\n"
"this is not allowed.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1298
msgid ""
"It is possible that you forgot a comma between items in a tuple, \n"
"or between function arguments, \n"
"before the position indicated by ^.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1306
msgid ""
"It is possible that you forgot a comma between items in a list\n"
"before the position indicated by ^.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1312
msgid ""
"It is possible that you forgot a comma between items in a set or dict\n"
"before the position indicated by ^.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1338
msgid ""
"Python indicates that the error is caused by `{second}` written immediately after `{first}`.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1368
msgid ""
"Perhaps you meant\n"
"\n"
"    {line}\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1375
msgid ""
"Did you forget something between `{first}` and `{second}`?\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1390
msgid ""
"Perhaps you meant to insert an operator like `{operators}`\n"
"between `{first}` and `{second}`.\n"
"The following lines of code would not cause any `SyntaxError`:\n"
"\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1399
msgid ""
"Note: these are just some of the possible choices and that\n"
"some of them might raise other types of exceptions.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1418
msgid ""
"It is possible that you used an equal sign `=` instead of a colon `:`\n"
"to assign values to keys in a dict\n"
"before or at the position indicated by ^.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1470
msgid ""
"I am guessing that you are trying to import at least one object\n"
"from module `{module}` and rename it using the Python keyword `as`;\n"
"this keyword can only be used to rename one object at a time\n"
"using a well defined syntax.\n"
"I suggest that you split up any such import statement with each object\n"
"renamed on a separate line as follows:\n"
"\n"
"    from {module} import object_1 as name_1\n"
"    from {module} import object_2 as name_2  # if needed\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1502
msgid ""
"I am guessing that you wrote {bad_token} twice in a row by mistake.\n"
"If that is the case, you need to remove the second one.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1506
msgid ""
"Did you write {bad_token} twice by mistake?\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1527
msgid ""
"I am guessing that you wrote {bad_token} by mistake.\n"
"Removing it and writing `{line}` seems to fix the error.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1531
msgid ""
"Did you write {bad_token} by mistake?\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1550
msgid ""
"It looks like the error occurred as you were writing a Python dict.\n"
"Perhaps wrote a dict key without writing the corresponding value.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1582
msgid ""
"The opening {bracket} on line {linenumber} is not closed.\n"
msgstr ""

#: syntax_errors\statement_analyzer.py:1588
msgid ""
"If this is incorrect, please report this case.\n"
msgstr ""

#: syntax_errors\syntax_utils.py:19
msgid "parenthesis `(`"
msgstr ""

#: syntax_errors\syntax_utils.py:20
msgid "parenthesis `)`"
msgstr ""

#: syntax_errors\syntax_utils.py:21
msgid "square bracket `[`"
msgstr ""

#: syntax_errors\syntax_utils.py:22
msgid "square bracket `]`"
msgstr ""

#: syntax_errors\syntax_utils.py:23
msgid "curly bracket `{`"
msgstr ""

#: syntax_errors\syntax_utils.py:24
msgid "curly bracket `}`"
msgstr ""

#: syntax_errors\syntax_utils.py:54
msgid ""
"Did you mean to use a normal quote character, `'` or `\"`?\n"
msgstr ""

#: syntax_errors\syntax_utils.py:55
msgid ""
"I suspect that you used a fancy unicode quotation mark\n"
"whose name is {name}\n"
"instead of a normal single or double quote for a string.\n"
msgstr ""

#: syntax_errors\syntax_utils.py:70
msgid ""
"Or perhaps, you meant to write a less than sign, `<`.\n"
msgstr ""

#: syntax_errors\syntax_utils.py:72
msgid ""
"Or perhaps, you meant to write a greater than sign, `>`.\n"
msgstr ""

#: syntax_errors\syntax_utils.py:74
msgid ""
"Or perhaps, you meant to write a comma.\n"
msgstr ""

#: syntax_errors\syntax_utils.py:88
msgid ""
"I suspect that you used a fancy unicode quotation mark\n"
"whose name is {name}.\n"
"\n"
msgstr ""

#: syntax_errors\syntax_utils.py:103
msgid ""
"Perhaps, you meant to write a less than sign, `<`.\n"
msgstr ""

#: syntax_errors\syntax_utils.py:104
msgid ""
"Did you mean to write a less than sign, `<`?\n"
msgstr ""

#: syntax_errors\syntax_utils.py:106
msgid ""
"Perhaps, you meant to write a greater than sign, `>`.\n"
msgstr ""

#: syntax_errors\syntax_utils.py:107
msgid ""
"Did you mean to write a greater than sign, `>`?\n"
msgstr ""

#: syntax_errors\syntax_utils.py:109
msgid ""
"Perhaps, you meant to write a comma.\n"
msgstr ""

#: syntax_errors\syntax_utils.py:124
msgid ""
"I suspect that you used the unicode character known as\n"
"'FRACTION SLASH', which looks similar to\n"
"but is different from the division operator `/`.\n"
msgstr ""

#: syntax_errors\syntax_utils.py:131
msgid ""
"Did you use a unicode fraction?\n"
msgstr ""

#: syntax_errors\syntax_utils.py:132
msgid ""
"I suspect that you used the unicode character `{char}`meant to represent a fraction.\n"
"The name of this unicode character is {name}.\n"
msgstr ""

#: syntax_errors\syntax_utils.py:173
msgid ""
"Did you mean `{num}/{denom}`?\n"
msgstr ""

#: syntax_errors\syntax_utils.py:174
msgid ""
"You used the unicode character {char} which is known as\n"
"{name}\n"
"I suspect that you meant to write the fraction `{num}/{denom}` instead.\n"
msgstr ""

