# Generated by Django 2.2.23 on 2021-05-31 14:50

import uuid

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("djangocms_faq", "0001_initial"),
    ]

    def update_all_uuids_by_random_ones(apps, schema_editor):
        import random
        import uuid

        from djangocms_faq.models import (
            FaqPluginModel,
            RelationSearchFaq,
            SearchFaqPluginModel,
        )

        print("\nUpdating faqs...")

        i = 0
        for faq in FaqPluginModel.objects.order_by("creation_date"):
            if not i:
                # create random uuid for each faq (draft and published versions share the same uuid)
                rd = random.Random()
                new_uuid = uuid.UUID(int=rd.getrandbits(128))
            i = (i + 1) % 2

            faq.uuid = new_uuid
            faq.save()

        print("Done!\nUpdating searches & relations...")

        i = 0
        for search in SearchFaqPluginModel.objects.order_by("creation_date"):
            if not i:
                # create random uuid for each search (draft and published versions share the same uuid)
                rd = random.Random()
                new_uuid = uuid.UUID(int=rd.getrandbits(128))
            i = (i + 1) % 2

            search.uuid = new_uuid
            search.save()

            for faq in search.search_in.all():
                # create relations between faqs and searchs
                if not RelationSearchFaq.objects.filter(
                    search=search.uuid, faq=faq.uuid
                ):
                    new_relation = RelationSearchFaq()
                    new_relation.faq = search.uuid
                    new_relation.search = faq.uuid
                    new_relation.save()

        print("Done!")

    operations = [
        migrations.CreateModel(
            name="RelationSearchFaq",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("faq", models.UUIDField(editable=False)),
                ("search", models.UUIDField(editable=False)),
            ],
        ),
        migrations.AlterModelOptions(
            name="faqpluginmodel",
            options={"verbose_name": "Conteneur de Faq"},
        ),
        migrations.AlterModelOptions(
            name="questionfaqpluginmodel",
            options={"verbose_name": "Question de Faq"},
        ),
        migrations.AlterModelOptions(
            name="searchfaqpluginmodel",
            options={"verbose_name": "Recherche Faq"},
        ),
        migrations.AddField(
            model_name="faqpluginmodel",
            name="show_title",
            field=models.BooleanField(default=True, verbose_name="Display title"),
        ),
        migrations.AddField(
            model_name="faqpluginmodel",
            name="uuid",
            field=models.UUIDField(default=uuid.uuid4, editable=False),
        ),
        migrations.AddField(
            model_name="searchfaqpluginmodel",
            name="uuid",
            field=models.UUIDField(default=uuid.uuid4, editable=False),
        ),
        migrations.AlterField(
            model_name="faqpluginmodel",
            name="title",
            field=models.CharField(blank=True, max_length=300, verbose_name="Titre"),
        ),
        migrations.AlterField(
            model_name="keyword",
            name="keyword",
            field=models.CharField(max_length=100, verbose_name="Mot-clef"),
        ),
        migrations.AlterField(
            model_name="questionfaqpluginmodel",
            name="keywords",
            field=models.ManyToManyField(
                to="djangocms_faq.Keyword", verbose_name="Mot-clefs"
            ),
        ),
        migrations.AlterField(
            model_name="questionfaqpluginmodel",
            name="slug",
            field=models.SlugField(
                blank=True,
                default="",
                help_text="Slug unique pour cette question. Laisser vide pour le laisse s'auto-générer.",
                max_length=300,
            ),
        ),
        migrations.AlterField(
            model_name="searchfaqpluginmodel",
            name="name",
            field=models.CharField(max_length=50, verbose_name="Nom de la recherche"),
        ),
        migrations.AlterField(
            model_name="searchfaqpluginmodel",
            name="search_in",
            field=models.ManyToManyField(
                limit_choices_to={"placeholder__page__publisher_is_draft": False},
                to="djangocms_faq.FaqPluginModel",
                verbose_name="Rechercher dans",
            ),
        ),
        migrations.RunPython(update_all_uuids_by_random_ones),
    ]
