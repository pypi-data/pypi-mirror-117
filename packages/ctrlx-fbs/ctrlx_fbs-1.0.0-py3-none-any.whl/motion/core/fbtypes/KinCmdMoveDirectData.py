# automatically generated by the FlatBuffers compiler, do not modify

# namespace: fbtypes

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

# parameters for the move linear commands for a kinematics
class KinCmdMoveDirectData(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsKinCmdMoveDirectData(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = KinCmdMoveDirectData()
        x.Init(buf, n + offset)
        return x

    # KinCmdMoveDirectData
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # commanded target position (or increment for relative position command)
    # KinCmdMoveDirectData
    def KinPos(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Float64Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 8))
        return 0

    # KinCmdMoveDirectData
    def KinPosAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Float64Flags, o)
        return 0

    # KinCmdMoveDirectData
    def KinPosLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # KinCmdMoveDirectData
    def KinPosIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        return o == 0

    # coordSys for commanded target position
    # KinCmdMoveDirectData
    def CoordSys(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def KinCmdMoveDirectDataStart(builder): builder.StartObject(2)
def KinCmdMoveDirectDataAddKinPos(builder, kinPos): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(kinPos), 0)
def KinCmdMoveDirectDataStartKinPosVector(builder, numElems): return builder.StartVector(8, numElems, 8)
def KinCmdMoveDirectDataAddCoordSys(builder, coordSys): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(coordSys), 0)
def KinCmdMoveDirectDataEnd(builder): return builder.EndObject()
