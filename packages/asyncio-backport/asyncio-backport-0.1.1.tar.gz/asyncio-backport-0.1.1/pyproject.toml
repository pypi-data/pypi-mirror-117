[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "asyncio-backport"
authors = [{name = "Thomas Grainger", email = "asyncio-backport@graingert.co.uk"}]
version = "0.1.1"
description = "A backport of asyncio features from newer versions"

[project.urls]
Home = "https://github.com/graingert/asyncio-backport"

[project.optional-dependencies]
test = [
    "pytest",
    "coverage_conditional_plugin",
    "pytest-cov",
    "mypy",
]

[tool.flit.module]
name = "asyncio_backport"

[tool.isort]
profile = "black"

[tool.black]
target_versions = ["3.6", "3.7", "3.8", "3.9", "3.10"]

[tool.mypy]
strict = true
warn_unused_configs = true
show_error_codes = true

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py{36,37,38,39}-{pytest,mypy}
minversion=3.24.1
isolated_build=true
requires=
    virtualenv >= 20.7.0
    tox-wheel >= 0.6.0
    tox-gh-actions >= 2.6.0


[testenv]
wheel = true
wheel_build_env = build
extras = test
commands =
    mypy: mypy {posargs:.}
    pytest: pytest {posargs}

[testenv:build]

[testenv:release]
deps =
    flit
commands =
    python -m flit publish
"""


[tool.pytest.ini_options]
addopts = [
  "--strict-config",
  "--strict-markers",
  "--cov",
  "--cov-fail-under=100.0",
  "--cov-report=term-missing:skip-covered",
]
xfail_strict = true
junit_family = "xunit2"
filterwarnings = ["error"]

[tool.coverage.run]
branch = true
source_pkgs = ["asyncio_backport"]
source = ["tests"]
plugins = ["coverage_conditional_plugin"]

[tool.coverage.paths]
source = [
    ".",
    ".tox/*/lib/*/site-packages/",
    '.tox\\*\\Lib\\site-packages\\',
]


[tool.coverage.coverage_conditional_plugin.rules]
# Here we specify our pragma rules:
py-gte-38 = "sys_version_info >= (3, 8)"
py-lt-38 = "sys_version_info < (3, 8)"
py-gte-37 = "sys_version_info >= (3, 7)"
py-lt-37 = "sys_version_info < (3, 7)"
py-gte-36 = "sys_version_info >= (3, 6)"
py-lt-36 = "sys_version_info < (3, 6)"
