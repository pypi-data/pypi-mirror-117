from .object_tracking import DEFAULT_DEREGISTER_FRAMES as DEFAULT_DEREGISTER_FRAMES, DEFAULT_MAX_DISTANCE as DEFAULT_MAX_DISTANCE, TrackablePrediction as TrackablePrediction, TrackerAlgorithm as TrackerAlgorithm, TrackingResults as TrackingResults
from typing import Any

def euclidean_distance_from_estimate(prediction, trackable, max_distance): ...

class TrackableKalmanPrediction(TrackablePrediction):
    filter: Any
    dim_x: Any
    dim_z: Any
    position: Any
    velocity: Any
    def init(self) -> None: ...
    def step(self) -> None: ...
    def handle_found(self, prediction) -> None: ...

class KalmanTracker:
    def __init__(self, deregister_frames=..., max_distance=..., enter_cb: Any | None = ..., exit_cb: Any | None = ..., **kwargs) -> None: ...
    def update(self, predictions): ...
