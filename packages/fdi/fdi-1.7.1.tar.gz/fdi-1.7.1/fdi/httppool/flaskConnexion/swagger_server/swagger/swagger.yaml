---
swagger: "2.0"
info:
  description: "This is an API description of the HTTPPool Server for FDI (Flexible\
    \ Dataset Integrator)"
  version: "1.1.0"
  title: "fdi HTTPPool"
  contact:
    email: "mhuang@nao.syx1026-qq.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:8080"
basePath: "/0.7"
schemes:
- "https"
paths:
  /{poolid}/hk:
    get:
      summary: "All pool housekeeping data."
      description: "With poolID return all pool housekeeping data."
      operationId: "poolid_hk_get"
      produces:
      - "application/json"
      parameters:
      - name: "poolid"
        in: "path"
        description: "poolID (also called pool name)"
        required: true
        type: "string"
      responses:
        "200":
          description: "returns all pool housekeeping data"
          schema:
            $ref: "#/definitions/hkdata"
        "401":
          description: "Fails. poolID does not exist."
          schema:
            $ref: "#/definitions/generatebad"
        "409":
          description: "Fails. pool is busy at the moment."
          schema:
            $ref: "#/definitions/generatebad"
        default:
          description: "Other errors."
          schema:
            $ref: "#/definitions/generatebad"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /{poolid}/hk/{metadata}:
    get:
      summary: "Returns a given type of pool housekeeping."
      description: "requests pool housekeeping data of the specified type: classes\
        \ or urns or tags ..."
      operationId: "poolid_hk_metadata_get"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "poolid"
        in: "path"
        description: "poolID (also called pool name)"
        required: true
        type: "string"
      - name: "metadata"
        in: "path"
        description: "one of classes, urns, tags ..."
        required: true
        type: "string"
        enum:
        - "classes"
        - "urns"
        - "tags"
      responses:
        "200":
          description: "Specified type of pool housekeeping data: classes or urns\
            \ or tags ..."
          schema:
            $ref: "#/definitions/hkdata_specific"
        "401":
          description: "Fails. poolID does not exist."
          schema:
            $ref: "#/definitions/generatebad"
        "409":
          description: "Fails. pool is busy at the moment."
          schema:
            $ref: "#/definitions/generatebad"
        default:
          description: "Other errors."
          schema:
            $ref: "#/definitions/generatebad"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /{poolid}/{dataclass}/{sn}:
    get:
      summary: "Returns a data item in the pool."
      description: "requests a data item in the pool by passing poolID, dataclass\
        \ and its index."
      operationId: "poolid_dataclass_sn_get"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "poolid"
        in: "path"
        description: "poolID (also called pool name)"
        required: true
        type: "string"
      - name: "dataclass"
        in: "path"
        description: "type of data"
        required: true
        type: "string"
      - name: "sn"
        in: "path"
        description: "index, within the given data type, of the data to retreive"
        required: true
        type: "integer"
        format: "int32"
      responses:
        "200":
          description: "return the product specified if it exists and is available"
          schema:
            $ref: "#/definitions/product"
        "401":
          description: "Fails. product does not exist."
          schema:
            $ref: "#/definitions/generatebad"
        "409":
          description: "Fails. pool is busy at the moment."
          schema:
            $ref: "#/definitions/generatebad"
        default:
          description: "Other errors."
          schema:
            $ref: "#/definitions/generatebad"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    post:
      summary: "upload a data item to server"
      description: "upload a data item to server"
      operationId: "poolid_dataclass_sn_post"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "poolid"
        in: "path"
        description: "poolID (also called pool name)"
        required: true
        type: "string"
      - name: "dataclass"
        in: "path"
        description: "type of data"
        required: true
        type: "string"
      - name: "sn"
        in: "path"
        description: "index, within the given data type, of the data to retreive"
        required: true
        type: "integer"
        format: "int32"
      responses:
        "200":
          description: "data item(s) created"
          schema:
            $ref: "#/definitions/productref"
        "401":
          description: "Fails. data item(s) is invalid"
          schema:
            $ref: "#/definitions/generatebad"
        "409":
          description: "Fails. pool is busy at the moment."
          schema:
            $ref: "#/definitions/generatebad"
        default:
          description: "Other errors."
          schema:
            $ref: "#/definitions/generatebad"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    delete:
      summary: "delete a data item from server"
      description: "delete specific data item from server by passing poolID, type\
        \ and index"
      operationId: "poolid_dataclass_sn_delete"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "poolid"
        in: "path"
        description: "poolID (also called pool name)"
        required: true
        type: "string"
      - name: "dataclass"
        in: "path"
        description: "type of data"
        required: true
        type: "string"
      - name: "sn"
        in: "path"
        description: "index, within the given data type, of the data to retreive"
        required: true
        type: "integer"
        format: "int32"
      responses:
        "200":
          description: "data item is removed from the pool"
        "401":
          description: "Fails. data item is invalid"
          schema:
            $ref: "#/definitions/generatebad"
        "409":
          description: "Fails. pool is busy at the moment."
          schema:
            $ref: "#/definitions/generatebad"
        default:
          description: "Other errors."
          schema:
            $ref: "#/definitions/generatebad"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /{poolid}:
    delete:
      summary: "Removes all contents of the pool."
      description: "requests all data in the pool be removed by passing poolID."
      operationId: "poolid_delete"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "poolid"
        in: "path"
        description: "poolID (also called pool name)"
        required: true
        type: "string"
      responses:
        "200":
          description: "wiping all pool data done"
          schema:
            $ref: "#/definitions/generateok"
        "401":
          description: "Fails. pool is invalid"
          schema:
            $ref: "#/definitions/generatebad"
        "409":
          description: "Fails. pool is busy at the moment."
          schema:
            $ref: "#/definitions/generatebad"
        default:
          description: "Other errors."
          schema:
            $ref: "#/definitions/generatebad"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
definitions:
  hkdata:
    type: "object"
    required:
    - "msg"
    - "result"
    - "ts"
    properties:
      result:
        $ref: "#/definitions/hkdata_result"
      msg:
        type: "string"
        example: "OK"
      ts:
        type: "number"
        format: "float"
        example: "1.5948800582498.861"
    title: "Pool Housekeeping data"
    description: "all pool HK data"
    example:
      result:
        classes: {}
      msg: "OK"
      ts: "1.5948800582498.861"
  hkdata_specific:
    type: "string"
    title: "specific pool HK data"
    description: "a particular kind of pool HK data"
  hkdata_result:
    type: "object"
    required:
    - "classes"
    - "tags"
    - "urns"
    properties:
      classes:
        $ref: "#/definitions/hkdata_specific"
      urns:
        $ref: "#/definitions/hkdata_specific"
      tags:
        $ref: "#/definitions/hkdata_specific"
    title: "pool HK result"
    description: "the result field of pool HK data response"
    example:
      classes: {}
  data_item_result:
    type: "string"
  product:
    type: "object"
    required:
    - "msg"
    - "result"
    - "ts"
    properties:
      result:
        $ref: "#/definitions/data_item_result"
      msg:
        type: "string"
        example: "OK"
      ts:
        type: "number"
        format: "float"
        example: "1.5948800582498.861"
    description: "data item(s) retrieved from the pool."
    example:
      result: {}
      msg: "OK"
      ts: "1.5948800582498.861"
  productref:
    type: "object"
    required:
    - "msg"
    - "result"
    - "ts"
    properties:
      result:
        $ref: "#/definitions/productref_result"
      msg:
        type: "string"
        example: "OK"
      ts:
        type: "number"
        format: "float"
        example: "1.5948800582498.861"
    description: "product reference(s)."
    example:
      result:
        meta: {}
        urnobj: "urnobj"
      msg: "OK"
      ts: "1.5948800582498.861"
  product_meta:
    type: "string"
  productref_result:
    type: "object"
    required:
    - "meta"
    - "urnobj"
    properties:
      urnobj:
        type: "string"
        description: "URN"
      meta:
        $ref: "#/definitions/product_meta"
    description: "the result field of productref response."
    example:
      meta: {}
      urnobj: "urnobj"
  generatebad:
    type: "object"
    properties:
      result:
        type: "string"
        example: "FAILED"
      msg:
        type: "string"
        example: "pool is not available"
      ts:
        type: "number"
        format: "double"
        example: 1.5948800582498861E13
  generateok:
    type: "object"
    properties:
      result:
        type: "string"
        example: "json"
      msg:
        type: "string"
        example: "Successful"
      ts:
        type: "number"
        format: "double"
        example: 1.5948800582498861E13
    example:
      result: "json"
      msg: "Successful"
      ts: 1.5948800582498861E13
